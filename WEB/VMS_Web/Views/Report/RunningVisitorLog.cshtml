@using VMS.Web.Models;
@{
    ViewBag.Title = "RunningVisitorLog";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    .NeedApprove {
        padding: 5px;
        background-color: #DC3545;
        color: white;
    }

    .NoNeedApprove {
        padding: 5px;
        background-color: #28A745;
        color: white;
    }

    .PendingStatus {
        padding: 5px;
        background-color: #FFC107;
        color: white;
    }

    .CheckoutStatus {
        padding: 5px;
        background-color: #343a40;
        color: white;
    }

    .CheckinStatus {
        padding: 5px;
        background-color: #007bff;
        color: white;
    }
</style>
<div class="row">
    <div class="col-md-12" id="BoxB2BSearch">
        <div class="box ShimanoBox">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        @(Html.Kendo().Grid<LogHistory>().Name("RunningLogGrid")
            .Columns(col =>
            {
                col.Bound(p => p.LogId).Title("RefNo");
                col.Bound(p => p.HostName).Title("Host Name");
                col.Bound(p => p.FullName).Title("Visitor Name");
                col.Bound(p => p.Company).Title("Company");
                //col.Bound(p => p.Status).Title("Status");

                col.Bound(p => p.Status).Title("Status");
                col.Bound(p => p.VisitorType).Title("Visitor Type");
                col.Bound(p => p.DateStart).Title("Date Start");
                col.Bound(p => p.DateEnd).Title("Date End");
                //col.Bound(p => p.CollectionDate).Title("Collection Date");
                //col.Bound(p => p.IsAbleCancel).Title("Action").ClientTemplate("#= SetChangeVisitTypeAll(CertID,StatusID)#");
            })
            .Filterable()
            .Pageable().AutoBind(false).ClientDetailTemplateId("DetailTemplate")
            .Resizable(resizable => resizable.Columns(true)).AutoBind(true)
            .Sortable()
            .Scrollable().Mobile()
            .HtmlAttributes(new { style = "height:550px;" })
                                               .DataSource(dataSource => dataSource
                                               .Ajax()
                                               .Model(model => model.Id(p => p.LogId))
                                               .PageSize(40)
                                               .Read(read => read.Action("GetRunningVisitorLog", "Report"))
                        )
                        )
                    </div>
                </div>
                <hr />
            </div>
        </div>
    </div>
</div>

<script id="DetailTemplate" type="text/kendo-tmpl">
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            @(Html.Kendo().Grid<LogHistory>()
            .Name("grid_#=LogId#") // template ex;pression, to be evaluated in the master context
            .Columns(columns =>
            {
                columns.Bound(o => o.FullName);
                columns.Bound(o => o.Company);
                columns.Bound(o => o.Status).ClientTemplate("\\#= SetStatusColor(Status)\\#").Width(150);
                columns.Bound(o => o.VisitorType);
                //columns.Bound(o => o.DocumentLocation); // escaped template expression, to be evaluated in the child/detail context
                columns.Bound(o => o.IsAbleCancel).Title("Action").ClientTemplate("\\#= SetChangeVisitTypeAll(IsAbleCancel, LogId, VisitorId)\\#");
                columns.Bound(o => o.IsAbleCancel);
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Read(read => read.Action("GetRunningVisitorLogDet", "Report", new { LogId = "#=LogId#"}))
            ).ToolBar(toolBar =>
            {
                if (System.Configuration.ConfigurationManager.AppSettings["PlantCode"] == "2300")
                {
                    toolBar.Custom().Text(" Cancel All").HtmlAttributes(new { href = "javascript:PostCancelAll('#=LogId#', 'ALL', 1);" }).IconClass("fa fa-times");
                    toolBar.Custom().Text(" Change Status All").HtmlAttributes(new { href = "javascript:PostChangeStatusAll('#=LogId#', 'ALL');" }).IconClass("fa fa-repeat");
                }
                else
                {
                    toolBar.Custom().Text(" Cancel All").HtmlAttributes(new { href = "javascript:PostCancelAll('#=LogId#', 'ALL', 1);" }).IconClass("fa fa-times");
                }
            })
            .Pageable()
            .ToClientTemplate()
            )
        </div>
    </div>
</script>

<div class="modal fade" id="modalCancel">
    <div class="modal-dialog  modal-sm ">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" style="color:white" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" id="titleModal">Cancel Appointment</h3>
            </div>
            <div class="modal-body" id="myModalBodyDiv1">
                <div class="row">
                    <div class="col-md-12">
                        <div class="k-content">
                            @Html.Hidden("LogIdCancel")
                            @Html.Hidden("VisitorIdCancel")
                            <p id="pCancelAppointment">Do you want to Cancel this Appointment?</p>
                        </div>
                    </div>
                </div>
                <hr />

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" id="btnSaveRequest" onclick="PostCancelToBackend()"><i class="fa fa-save"></i> OK</button>
                <a href="#" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Close</a>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalChangeStatus">
    <div class="modal-dialog  modal-sm ">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" style="color:white" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" id="titleModal">Change Visitor Type</h3>
            </div>
            <div class="modal-body" id="myModalBodyDiv1">
                <div class="row">
                    <div class="col-md-12">
                        <div class="k-content">
                            @Html.Hidden("LogIdVT")
                            @Html.Hidden("VisitorIdVT")
                            @Html.Label("VisitorTypeVT", "Visitor Type")
                            @Html.Kendo().DropDownList().Name("VisitorTypeVT").OptionLabel("Select Visit Type...").HtmlAttributes(new { style = "width: 100%", @class = "", required = "required", data_required_msg = "Please Select the Visit Type" }).DataTextField("VisitorType").DataValueField("Id").DataSource(source => { source.Read(read => { read.Action("getVisitTypeList", "MasterData"); }); })
                        </div>
                    </div>
                </div>
                <hr />

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" id="btnSaveRequest" onclick="PostChangeStatusToBackend()"><i class="fa fa-save"></i> Save</button>
                <a href="#" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Close</a>
            </div>
        </div>
    </div>
</div>

<script>
    function SetChangeVisitTypeAll(IsAbleCancel, LogId, VisitorId) {
        if (IsAbleCancel) {
            if (@System.Configuration.ConfigurationManager.AppSettings["PlantCode"] == "2300") {
                return "<button type='button' class='btn btn-danger' onclick='PostCancelAll(" + LogId + ',' + VisitorId + ',0' + ")'><i class='fa fa-times'></i>  </button> - " +
                    "<button type='button' class='btn btn-info' onclick='PostChangeStatusAll(" + LogId + ',' + VisitorId + ',0' + ")'> <i class='fa fa-repeat'></i></button>"
            }
            else {
                return "<button type='button' class='btn btn-danger' onclick='PostCancelAll(" + LogId + ',' + VisitorId + ',0' + ")'><i class='fa fa-times'></i>  </button> "
            }
        }
        else {
            return "Cannot Change";
        }
    }
    function SetStatusColor(status) {
        if (status.toUpperCase() == "CHECKIN") {
            return "<div class='CheckinStatus'>" + status + "</div>";
        }
        else if (status.toUpperCase() == "CHECKOUT" | status.toUpperCase() == "BREAK") {
            return "<div class='CheckoutStatus'>" + status + "</div>";
        }
        else if (status.toUpperCase() == "PENDING") {
            return "<div class='PendingStatus'>" + status + "</div>";
        }
        else if (status.toUpperCase() == "CANCELLED" || status.toUpperCase() == "REJECTED") {
            return "<div class='NeedApprove'>" + status + "</div>";
        }
        else  {
            return "<div class='NoNeedApprove'>" + status + "</div>";
        }
    }
    function PostCancelAll(LogId, VisitorId, isAll) {
        $("#LogIdCancel").val(LogId)
        $("#VisitorIdCancel").val(VisitorId)
        $("#modalCancel").modal('show')
        if (isAll == 1){
            $("#pCancelAppointment").html("Do you want to cancel this Appointment? (Note: The Visitor(s) with 'CHECKIN'/ 'CHECKOUT' status cannot be cancelled.)")
        }
        else{
            $("#pCancelAppointment").html("Do you want to cancel this Appointment?")
        }

    }
    function PostChangeStatusAll(LogId, VisitorId) {
        $("#LogIdVT").val(LogId)
        $("#VisitorIdVT").val(VisitorId)
        $("#modalChangeStatus").modal('show')
    }
    function PostCancelToBackend() {
        DP.AJaxAll({
            LogId: $("#LogIdCancel").val(),
            VisitorId: $("#VisitorIdCancel").val(),
        }, "@Url.Action("PostCancelAll", "Report")", function (data) {
            if (data.Success) {
                toastr.success("Success Cancel Appointment", "Success!")
                RetrieveData()
            }
            else {
                //ShiMessage.error("Warning!","All Visitor in REJECTED/CANCELLED Status, you may create new Appointment for this Visitor")
                ShiMessage.error("Warning!", data.Message)
            }
        })
    }
    function PostChangeStatusToBackend() {
        DP.AJaxAll({
            LogId: $("#LogIdVT").val(),
            VisitorId: $("#VisitorIdVT").val(),
            VisitorType: $("#VisitorTypeVT").val(),
        }, "@Url.Action("PostChangeStatusAll", "Report")", function (data) {
            if (data.Success) {
                toastr.success("Success Change Visitor Type", "Success!")
                RetrieveData()
            }
            else {
                ShiMessage.error("Warning!", "All Visitor in REJECTED/CANCELLED Status, you may create new Appointment for this Visitor")
            }
        })
    }
    function RetrieveData() {
        $("#modalChangeStatus").modal('hide')
        $("#modalCancel").modal('hide')
        $("#RunningLogGrid").data("kendoGrid").dataSource.read();
    }
</script>