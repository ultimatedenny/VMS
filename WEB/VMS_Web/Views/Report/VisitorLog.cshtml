@using VMS.Web.Models
@{
    ViewBag.Title = "Visitor Log";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .k-grid {
        overflow-x: auto;
        white-space: nowrap;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="box ShimanoBox">
            <div class="box-body">
                <div class="row">

                    <div class="col-md-12">
                        <h4>
                            Visitor By Today
                        </h4>
                        <div class="row">
                            @using (Html.BeginForm("ExportSecurityHis", "Report", FormMethod.Post))
                            {
                                <div class="col-md-2">
                                    <div class="k-content">
                                        @Html.Label("DateFromHis", "Date Start")
                                        @(Html.Kendo().DatePicker().Name("DateFromHis")
                                          .Start(CalendarView.Month)
                                          .Depth(CalendarView.Month)
                                          .Max(DateTime.Today.AddYears(1)).Events(e => e.Change("startChangeHis"))
                                          .Format("yyyy-MM-dd")
                                          .Value(DateTime.Today.AddMonths(-1))
                                          .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                                        )
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="k-content">
                                        @Html.Label("DateToHis", "Date To")
                                        @(Html.Kendo().DatePicker().Name("DateToHis")
                                            .Start(CalendarView.Month)
                                            .Depth(CalendarView.Month)
                                            .Min(DateTime.Today)
                                            .Max(DateTime.Today.AddMonths(1)).Events(e => e.Change("GenerateHisGrid"))
                                            .Format("yyyy-MM-dd")
                                            .Value(DateTime.Today)
                                            .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                                        )
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="k-content">
                                        @Html.Label("Plant", "Plant")
                                        @Html.Kendo().DropDownList().Name("Plant").OptionLabel("Select Plant...").HtmlAttributes(new { style = "width: 100%", @class = "", data_required_msg = "Please Select the Plant" }).DataTextField("plantName").DataValueField("plantId").DataSource(source => { source.Read(read => { read.Action("getPlantList", "MasterData"); }); }).Events(e => e.Change("GenerateHisGrid")).Value(Session["UsePlant"].ToString())
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("SearchVisitor", "Visitor Name or Company")
                                    @Html.Kendo().TextBox().Name("SearchVisitor").HtmlAttributes(new { @class = "form-control ShimanoTextBox", style = "width:100%", @onchange = "GenerateHisGrid()" })
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("SearchHost", "Host Name")
                                    @Html.Kendo().TextBox().Name("SearchHost").HtmlAttributes(new { @class = "form-control ShimanoTextBox", style = "width:100%", @onchange = "GenerateHisGrid()" })
                                </div>
                                <div class="col-md-2">
                                    <button type="submit" class="btn btn-success"><i class="fa fa-file-excel-o"></i> Export</button>
                                </div>
                            }
                        </div><br />
                        <hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-12">
                                    @(Html.Kendo().Grid<LogHistory>().Name("VisitLogGrid")
                                    .Columns(col =>
                                    {
                                        col.Bound(p => p.HostName).Title("Host Name").Width(200).Locked(true);
                                        col.Bound(p => p.FullName).Title("Visitor Name").Width(200).Locked(true);
                                        col.Bound(p => p.Company).Title("Company").Width(200);
                                        col.Bound(p => p.VisitorType).Title("Visitor Type").ClientTemplate("#= GetVisitorTypeColor(VisitorType, NeedApprove) #").Width(200);
                                        col.Bound(p => p.Plant).Title("Plant").Width(100);
                                        col.Bound(p => p.Remark).Title("Remark").Width(200);
                                        col.Bound(p => p.ReadStatus).Title("Disclaimer Status").ClientTemplate("#= GetDisclaimerStatus(LogId, FullName, Company,VisitorType,Plant,ReadStatus) #").Width(200);
                                        col.Bound(p => p.Status).Title("Status").Width(200);
                                        col.Bound(p => p.DateIn).Title("Date In").Width(200);
                                        col.Bound(p => p.DateOut).Title("Date Out").Width(200);
                                        col.Bound(p => p.TimeStart).Title("Time Start").Width(120);
                                        col.Bound(p => p.TimeEnd).Title("Time End").Width(120);
                                        col.Bound(p => p.Duration).Title("Duration").Width(200);
                                        col.Bound(p => p.ApprovedBy).Title("Approved By").Width(200);
                                        col.Bound(p => p.VehicleNo).Title("Vehicle No").Width(200);
                                        col.Bound(p => p.ShimanoBadge).Title("Shimano Badge").Width(200);
                                        col.Bound(p => p.RemarkVisitor).Title("Remark In").Width(200);
                                        col.Bound(p => p.RemarkOut).Title("Remark Out").Width(200);
                                        col.Bound(p => p.UserIn).Title("Check In By").Width(200);
                                        col.Bound(p => p.UserOut).Title("Check Out By").Width(200);
                                    })
                                        //.Events(ev => ev.Change("onChange"))
                                        .Filterable()
                                        //            .Selectable()
                                        //.Events(e => e.Change("onChange"))
                                        .Pageable().AutoBind(true)
                                        .Resizable(resizable => resizable.Columns(true))
                                        .Sortable().Scrollable(s => s.Enabled(true))
                                        .HtmlAttributes(new { style = "height:550px;white-space:nowrap;" })
                                               .DataSource(dataSource => dataSource
                                               .Ajax()
                                               //.Events(events => events.Error("error_handler"))
                                               .Model(model => model.Id(p => p.LogId))
                                               .PageSize(40)
                                               .Read(read => read.Action("GetVisitorLog", "Report").Data("fnGetVisitorLogParam"))
                                        )
                                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-3">
                            <h4>
                                Graph Visitor
                            </h4>
                            <div class="row">

                            </div>
                        </div>*@
                </div>

            </div>
        </div>
    </div>
</div>


@* MODAL DISCLAIMER *@
<div class="modal fade" id="modaldisclaimer">
    <div class="modal-dialog" style=" width: 400px;">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 class="modal-title" id="title">Disclaimer Status</h4>
            </div>
            <div class="modal-body" id="stsDisclaimer">
                @*<p style="font-size: large;"> Disclaimer Category : General</p>
                    <p style="font-size: large;margin-bottom:30px"> Read On 20-02-2022 10:22</p>*@
            </div>
        </div>
    </div>
</div>
@* END DISCLAIMER *@

<script>
    function GenerateHisGrid() {
        $("#VisitLogGrid").data('kendoGrid').dataSource.read()
    }
    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });
    function GetVisitorTypeColor(VisitorType, NeedApprove) {
        if (NeedApprove.toUpperCase() == "FALSE") {
            return "<div class='NoNeedApprove'>" + VisitorType + "</div>";
        }

        else {
            return "<div class='NeedApprove'>" + VisitorType + "</div>";
        }
    }

    function GetDisclaimerStatus(LogId, FullName, Company, VisitorType, Plant, ReadStatus) {
        if (ReadStatus != "Outstanding") {
            return '<a onclick="funGetDisclaimerDetail(`' + LogId + '`,`' + FullName + '`,`' + Company + '`,`' + VisitorType + '`,`' + Plant + '`)" style="text-decoration-line: underline;cursor: pointer;"><span>' + ReadStatus + '</span></a>';
        } else {
            return '<span>' + ReadStatus + '</span>';

        }
    }

    function funGetDisclaimerDetail(LogId, FullName, Company, VisitorType, Plant) {
        $("#modaldisclaimer").modal("show");
        var Position = $('#stsDisclaimer');
        Position.empty();
        $.ajax({
            url: '@Url.Action("GetDisclaimerDetail", "Report")',
            method: "POST",
            dataType: "JSON",
            data: {
                LogId: LogId,
                FullName: FullName,
                Company: Company,
                VisitorType: VisitorType,
                Plant: Plant,
            },
            success: function (j) {
                if (j.Result == true) {
                    console.log(j);
                    var item = "";
                    if (j.Data[0].length > 0) {
                        for (var x = 0; x < j.Data[0].length; x++) {
                            if (j.Data[0][x].DisclaimerCategory != "" && j.Data[0][x].UpdateAt != "") {
                                item += '<p style="font-size: large;"> Disclaimer Category : ' + j.Data[0][x].DisclaimerCategory + '</p>'
                                item += '<p style="font-size: large;"> Area : ' + j.Data[0][x].AreaName + '</p>'
                                item += '<p style="font-size: large;margin-bottom:30px"> Read On ' + j.Data[0][x].UpdateAt + '</p>'
                            }
                        }
                        Position.append(item);
                    }
                }
                else {
                    toastr.error("Failed Result, Please contact IT")
                }
            },
            error: function (xhr, error, text) {
                toastr.error("Failed, Please contact IT")
            }
        });
    }
</script>
<script>
    function fnGetVisitorLogParam() {
        var dateFrom = $("#DateFromHis").val();
        var dateTo = $("#DateToHis").val();
        var plant = $("#Plant").val();
        var SearchVisitor = $("#SearchVisitor").val();
        var SearchHost = $("#SearchHost").val();
        return {
            dateFrom: dateFrom,
            dateTo: dateTo,
            plant: plant,
            SearchVisitor: SearchVisitor,
            SearchHost: SearchHost
        }
    }
</script>
<script>

    function startChangeHis() {
        var endPicker = $("#DateToHis").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate());
            endPicker.min(startDate);
        }
        GenerateHisGrid();
    }
</script>


