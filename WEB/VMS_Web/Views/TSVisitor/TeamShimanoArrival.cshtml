@model VMS.Web.Models.Temp_VisitorTS
@{
    ViewBag.Title = "Arrival";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@Styles.Render("~/DataTablesCS")
@Scripts.Render("~/DataTablesJS")
@Scripts.Render("~/Highchart")

<script>
    $(document).ready(function () {
        GenerateTempVisitor()
    })
</script>
<script>
    function GenerateTempVisitor() {
        var dateFrom = $("#DateFromTemp").val();
        var dateTo = $("#DateToTemp").val();
        var name = $("#txtSearch").val();
        var tableHistoryGrid = $("#VisitorGrid").DataTable({
            destroy: true,

            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 5,
            "scrollX" : true,
            "ajax": {
                "url": "@Url.Action("GetTempVisitor", "TSVisitor")",
            "type": "POST",
            "datatype": "json",
            "data": function (d) {
                return $.extend({}, d, {
                    "dateFrom": dateFrom,
                    "dateTo": dateTo,
                    "name": name
                });
            }
        },

            "columnDefs":
            [{
                "targets": [0],
                "visible": false,
                "searchable": false
            },
            {
                "targets": [5],
                "searchable": false,
                "orderable": false
            }],

            "columns": [
            { "data": "Id", "name": "Id", "autoWidth": true },
            {
                "data": "No",
                render: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            { "data": "Name", "name": "Name", "title": "Full Name", "autoWidth": true },
            { "data": "Department", "name": "Department", "title": "Department", "autoWidth": true },
            { "data": "Plant", "name": "Plant", "title": "Plant", "autoWidth": true },
            { "data": "HostName", "name": "HostName", "title": "Host Name", "autoWidth": true },
            { "data": "HostDepartment", "name": "HostDepartment", "title": "Host Department", "autoWidth": true },
            { "data": "UploadDate", "name": "UploadDate", "title": "Arrival Date", "autoWidth": true },
            { "data": "DateEnd", "name": "DateEnd", "title": "Date End Travel", "autoWidth": true },
            {
                "render": function (data, type, full, meta) {
                    return '<button class="btn btn-info"  onclick="AddEditTempVisitor(' + full.Id + ')"><i class="fa fa-1x fa-edit"></i> Edit</button>' +
                        '- <button class="btn btn-danger"  onclick="DeleteTempVisitor(' + full.Id + ')"><i class="fa fa-1x fa-trash"></i> Delete</button>';
                }
            },

    ]
    }
        );
    }
</script>


<style>
    .ShimanoBlack {
        background-color: black;
        color: white;
    }
</style>
<h2>Arrival</h2>

<div class="row">
    <div class="col-md-12">
        <div class="box ShimanoBox">
            <div class="box-header">
                <h4 style="color:black">Visitor Arrival</h4>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            @using (Html.BeginForm("UploadAppointment", "TSVisitor", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.Label("FileUpload", "Upload Team Shimano Arrival")
                                        @Html.TextBox("FileUpload", null, new { type = "file", @class = "input-file" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <button id="btnSubmit" class="btn btn-success">
                                        <span id="btnLabel">Save</span>
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                   
                    <div class="col-md-6">
                            <div class="row">
                                <div class="col-md-6">
                                    <a href="@Url.Action("DownloadTemplate", "TSVisitor")" class="btn btn-info btn-microsoft">Download Template</a>
                                </div>
                            </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row" id="rowGrid">
    <div class="col-md-12" id="BoxArea">
        <div class="box ShimanoBox">
            <div class="box-header">
                Visitor List
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        <button class="btn btn-info" onclick="AddEditTempVisitor(0)"><i class="fa fa-plus"></i> Add Visitor</button>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <div class="k-content">
                            @Html.Label("DateFromTemp", "Date Start")
                            @(Html.Kendo().DatePicker().Name("DateFromTemp")
          .Start(CalendarView.Month)
          .Depth(CalendarView.Month)
          .Max(DateTime.Today).Events(e => e.Change("startChangeTemp"))
          .Format("yyyy-MM-dd")
          .Value(DateTime.Today.AddDays(-7))
          .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                            )
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="k-content">
                            @Html.Label("DateToTemp", "Date To")
                            @(Html.Kendo().DatePicker().Name("DateToTemp")
            .Start(CalendarView.Month)
            .Depth(CalendarView.Month)
            .Min(DateTime.Today).Events(e => e.Change("GenerateTempVisitor"))
            .Format("yyyy-MM-dd")
            .Value(DateTime.Today.AddDays(7))
            .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                            )
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.Label("txtSearch", "Search By Visitor Name or Company")
                        @Html.Kendo().TextBox().Name("txtSearch").HtmlAttributes(new { @class = "form-control ShimanoTextBox", style = "width:100%", @onchange = "GenerateTempVisitor()" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <div style="width:100%; margin:0 auto;">
                            <table id="VisitorGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>id</th>
                                        <th>No</th>
                                        <th>FullName</th>
                                        <th>Department</th>
                                        <th>Plant</th>
                                        <th>Host Name</th>
                                        <th>Host Department</th>
                                        <th>Arrival Date</th>
                                        <th>Date End Travel</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>

<div class="modal fade" id="modalEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Ajax.BeginForm("SaveVisitorTemp", "TSVisitor",
                            new AjaxOptions
                            {
                                OnSuccess = "onSuccess",
                                OnFailure = "onFailure",
                                LoadingElementId = "progress"
                            }))
            {
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title" id="title">AddEdit Visitor</h3>
                </div>
                <div class="modal-body" id="myModalBodyDiv1">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.HiddenFor(m => m.Id)
                                @Html.LabelFor(model => model.Name, "Full Name: ")<br />
                                @(Html.Kendo()
.TextBoxFor(model => model.Name)
.HtmlAttributes(new { @class = "form-control", style = "width:100%", required = "required", data_required_msg = "Please Fill the Full Name" }))
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.LabelFor(model => model.Plant, " Select Plant : ")<br />
                                @(Html.Kendo().ComboBoxFor(model => model.Plant)
                  .Filter("contains")
                  .Placeholder("Select Plant...")
                  .DataTextField("plantName")
                  .DataValueField("plantId")
                  .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("getPlantMDM", "MasterData");
                        });
                    })
                  .Suggest(true)
                  .HtmlAttributes(new { style = "width:100%;" })
                                )
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.LabelFor(model => model.Department, "Department: ")<br />
                                @(Html.Kendo()
.TextBoxFor(model => model.Department)
.HtmlAttributes(new { @class = "form-control", style = "width:100%" }))
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.LabelFor(model => model.HostName, "Host Name: ")<br />
                                @(Html.Kendo()
.TextBoxFor(model => model.HostName)
.HtmlAttributes(new { @class = "form-control", style = "width:100%" }))
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.LabelFor(model => model.HostDepartment, "Host Department: ")<br />
                                @(Html.Kendo()
.TextBoxFor(model => model.HostDepartment)
.HtmlAttributes(new { @class = "form-control", style = "width:100%" }))
                            </div>
                        </div>
                    </div>
                  <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.LabelFor(m=> m.DateManual, "Date End:")
                                @(Html.Kendo().DatePickerFor(m=> m.DateManual)
          .Start(CalendarView.Month)
          .Depth(CalendarView.Month)
          .Max(DateTime.Today.AddYears(1)).Min(DateTime.Today)
          .Format("yyyy-MM-dd")
          .Value(DateTime.Today.AddMonths(-1))
          .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                                )
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSubmit" class="btn btn-success">
                        <span id="btnLabel">Save</span>
                    </button>
                </div>
            }

        </div>

    </div>

</div>

<script>
    function startChangeTemp() {
        var endPicker = $("#DateToTemp").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate());
            endPicker.min(startDate);
        }
        GenerateTempVisitor();
    }
</script>

<script>
    function AddEditTempVisitor(Id) {
        $("#modalEdit").modal("show");
        if (Id > 0) {
            $("#title").html("Edit Visitor");
            $("#btnLabel").html("Update");
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTSVisitorTempDet", "TSVisitor")',
                data: { Id: Id },
                success: function (data) {
                    $("#@Html.IdFor(model => model.Id)").val(Id);
                    $("#@Html.IdFor(model => model.Name)").val(data.Name);
                    $("#@Html.IdFor(model => model.Plant)").data("kendoComboBox").value(data.Plant);
                    $("#@Html.IdFor(model => model.Department)").val(data.Department);
                    $("#@Html.IdFor(model => model.HostName)").val(data.HostName);
                    $("#@Html.IdFor(model => model.HostDepartment)").val(data.HostDepartment);
                }
            });
        }
        else {
            $("#title").html("Add Visitor");
            $("#@Html.IdFor(model => model.Id)").val(0);
            $("#@Html.IdFor(model => model.Name)").val("");
            $("#@Html.IdFor(model => model.Plant)").val("");
            $("#@Html.IdFor(model => model.Department)").val("");
            $("#@Html.IdFor(model => model.HostName)").val("");
            $("#@Html.IdFor(model => model.HostDepartment)").val("");
        }
    }
    function onSuccess(data) {
        if (data.Success) {
            $("#loaderDiv").hide();
            $("#modalEdit").modal("hide");
            oTable = $('#VisitorGrid').DataTable();
            oTable.draw();
            toastr.success(data.Message, 'Success!');
        } else {
            ShiMessage.error("Error!", data.Message)
        }

    }
    function DeleteTempVisitor(id) {
        DP.AJaxAll({
            id : id
        }, "@Url.Action("DeleteTempVisitor", "TSVisitor")", function (data) {
            if (data.Success) {
                oTable = $('#VisitorGrid').DataTable();
                oTable.draw();
            }
            else {
                oTable = $('#VisitorGrid').DataTable();
                oTable.draw();
                ShiMessage.error("Error!", data.Message)
            }
        })
    }
</script>


@if (TempData["isSuccess"] != null)
{
    if (bool.Parse(TempData["isSuccess"].ToString()))
    {
        <script>
            toastr.success('@TempData["message"].ToString()', 'Success!')
        </script>
    }
    else
    {
        <script>
            toastr.error('@TempData["message"].ToString()', 'Error!')
        </script>
    }
}





