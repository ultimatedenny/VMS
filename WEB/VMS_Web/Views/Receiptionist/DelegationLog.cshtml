
@{
    ViewBag.Title = "DelegationLog";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script>
    $(document).ready(function () {
        funcRenderTable();
        getData();
        var BusFunc = '@Session["BusFunc"]';
        //console.log(BusFunc.toUpperCase());
        if (BusFunc.toUpperCase() == "SYSTEM-ADMIN" || BusFunc.toUpperCase() == "SYSTEM-HR-POWER")
        {
            $('#btnAddDelegation').toggle(true);
        }
        else
        {
            $('#btnAddDelegation').toggle(false);
        }
    });
</script>
<script>
    function startChange() {
        var endPicker = $("#searchEndDate").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate());
            endDate = new Date(startDate);
            endDate.setDate(startDate.getDate()); //Modified by CANICE 20210801  endDate.setDate(endDate.getDate() + 14);
            //endPicker.min(startDate);
            endPicker.value(startDate);
            //endPicker.max(endDate); //Commented by CANICE 20210801
        }
    }

    function endChange() {
        var startPicker = $("#searchStartDate").data("kendoDatePicker"),
            endDate = this.value();

        if (endDate) {
            startDate = new Date(endDate);
            startDate.setDate(endDate.getDate()); //Modified by CANICE 20210801 startDate.setDate(endDate.getDate() - 14)
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate());
            //startPicker.max(endDate);
            //startPicker.min(startDate); //Commented by CANICE 20210801
        }
    }
    function RetrieveData() {
        //Sys.LoadingShow();
        //$('#tblmmAutoApproval').data('kendoGrid').dataSource.read()
        getData();

    }
</script>
<script>
    function funcRenderTable() {
        var table = "";
        var options = "";

        // begin first table
        options = {
            responsive: true,
            paging: true,

            columns: [
                { "data": "Number" },
                { "data": "UsePlant" },
                { "data": "UseID" },
                { "data": "UseNam" },
                { "data": "UseDep" },
                { "data": "DelegateEffectiveFrom" },
                { "data": "DelegateEffectiveTo" },
                { "data": "DelegateUseID" },
                { "data": "DelegateUseNam" },
                { "data": "ChgDate" },
                { "data": "Status" },
                { "data": "DelegateRemarks" },
                { "data": null },
            ],
            columnDefs: [
                {
                    targets: 12,
                    render: function (data, type, full, meta) {
                        var output = ``;
                        output = '<div class="btn-toolbar mb-3" role="toolbar" aria-label="Toolbar with button groups">'
                        output += '          <div class="btn-group mr-2" role="group" aria-label="First group">'
                        output += '             <button class="btn btn-info"    onclick="fnShowDelegation(\'Edit\',\'' + full.UseID + '\', \'HRA\')"><i class="fa fa-1x fa-plus"></i> Edit</button>'
                        output += '             <button class="btn btn-danger"  onclick="funcDelete(\'' + full.UseID + '\')"><i class="la la-trash">Delete</i></button>'
                        output += '         </div>'
                        output += '        </div>'
                        return output;
                    },
                },
                {
                    targets: 8,
                    "visible": false
                },
            ],
        };

        table = $('#tblDelegation').DataTable(options);
        tblDelegation.mDataTable = table;
    }
    function getData() {
        var Plant = $('#searchPlant').val();
        var Department = $('#searchDepartment').val();
        var StartDate = $('#searchStartDate').val();
        var EndDate = $('#searchEndDate').val();
        $.ajax({
            //url: "../MasterData/GetmmDelegationLog",
            url: '@Url.Action("GetmmDelegationLog", "MasterData")',
            method: "POST",
            dataType: "JSON",
            data: {
                Plant: Plant,
                Department: Department,
                StartDate: StartDate,
                EndDate: EndDate,
            },
            success: function (j) {
                //console.log(j.xdataTable);
                tblDelegation.mDataTable.clear();
                $.each(j.xdataTable, function (i, st) {
                    tblDelegation.mDataTable.row.add(st);
                })
                tblDelegation.mDataTable.draw();
            },
            error: function (xhr, error, text) {
                toastr.error("Failed Query Get View Table, Please contact IT")
            }
        });
    }
    function RetrieveData() {
        //Sys.LoadingShow();
        //$('#tblmmAutoApproval').data('kendoGrid').dataSource.read()
        getData();

    }
    function GetParamPlant() {
        return {
            Plant: $("#searchPlant").val()
        }
    }
    function funcDelete(userID) {
        Swal.fire({
            title: 'Are you sure!',
            text: "Do you want to delete this item?",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value == true) {
                
                    $.ajax({
                        url: '@Url.Action("RemoveDelegation2", "User")',
                        method: "POST",
                        dataType: "JSON",
                        data: {
                            UseID: userID,
                        },
                        success: function (j) {
                            if (j.Success == true) {
                                getData();
                                toastr.success(j.Message, "Success");
                            }
                            else {
                                toastr.error("Error. " + j.Message + ", Please contact IT")
                            }
                        },
                        error: function (xhr, error, text) {
                            toastr.error("Failed Count Result, Please contact IT")
                        }
                    });
                
            }
        });
    }
</script>
@Scripts.Render("~/Mousetrap")
@Styles.Render("~/DataTablesCS")
@Scripts.Render("~/DataTablesJS")
<script src="~/Scripts/sweetalert2@11.js"></script>
<p>DelegationLog</p>
<div class="row">
    <div class="col-md-12">
        <div class="box ShimanoBox">
            <div class="box-body">
                <div class="row">

                    <div class="col-md-12">

                        <div class="row">

                            <div class="col-md-2">
                                <div class="k-content">
                                    @Html.Label("searchPlant", "Plant")
                                    @Html.Kendo().DropDownList().Name("searchPlant").OptionLabel("Select Plant...").HtmlAttributes(new { style = "width: 100%", @class = "" }).DataTextField("plantName").DataValueField("plantId").DataSource(source => { source.Read(read => { read.Action("getPlantList", "MasterData"); }); }).Value(Session["UsePlant"].ToString()).Events(e => e.Change("RetrieveData"))
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="k-content">
                                    @Html.Label("Department", "Department")
                                    @Html.Kendo().DropDownList().Name("searchDepartment").OptionLabel("Select Department...").HtmlAttributes(new { style = "width: 100%", @class = "" }).Filter("contains").DataTextField("DeptName").DataValueField("Dept").DataSource(source => { source.Read(read => { read.Action("GetDepartmentApprovalLevelDDList", "MasterData").Data("GetParamPlant"); }); }).Events(e => e.Change("RetrieveData"))
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="k-content">
                                    @Html.Label("StartDate", "Start Date")
                                    @(Html.Kendo().DatePicker()
                                        .Name("searchStartDate")
                                        .Start(CalendarView.Month)
                                        .Depth(CalendarView.Month)
                                        .Events(e => e.Change("endChange")) //Modified by CANICE 20210801 .Max(DateTime.Today.AddDays(14)).Events(e => e.Change("endChange"))
                                        .Format("yyyy-MM-dd")
                                        .Value(DateTime.Today.AddMonths(-1))
                                        .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                                    )
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="k-content">
                                    @Html.Label("EndDate", "End Date")
                                    @(Html.Kendo().DatePicker()
                                        .Name("searchEndDate")
                                        .Start(CalendarView.Month)
                                        .Depth(CalendarView.Month)
                                        .Events(e => e.Change("endChange")) //Modified by CANICE 20210801 .Max(DateTime.Today.AddDays(14)).Events(e => e.Change("endChange"))
                                        .Format("yyyy-MM-dd")
                                        .Value(DateTime.Today)
                                        .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                                    )
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div style="padding-top:25px">
                                    <button type="submit" class="btn btn-info" onclick="getData()"><i class="fa fa-info-circle"></i> Show</button>
                                    <button type="button" class="btn btn-primary" onclick="fnShowDelegation('Add','','HRA');" id="btnAddDelegation"><i class="fa fa-plus-circle"></i> Add Delegation</button>
                                </div>
                            </div>

                        </div><br />
                        <hr />
                        <div class="row">
                            <div class="col-md-12">
                                <table class="table table-bordered table-hover table-checkable" id="tblDelegation" style="margin-top: 13px !important">
                                    <thead>
                                        <tr style="color:white;background-color:#30505F;border-color:Transparent;font-weight:bold;">
                                            <th>No</th>
                                            <th>Plant</th>
                                            <th>Windows ID</th>
                                            <th>Username</th>
                                            <th>Department</th>
                                            <th>Start Date</th>
                                            <th>End Date</th>
                                            <th>DelegatorWindowsID</th>
                                            <th>Delegator</th>
                                            <th>Submitted On</th>
                                            <th>Status</th>
                                            <th>Remarks</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

