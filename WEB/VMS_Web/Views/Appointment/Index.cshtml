@model VMS.Web.Models.AppointmentViewModel
@using System.Web.Optimization
@{
    ViewBag.Title = "Appointment";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@if (TempData["SUCCESS"] != null)
{
    <script>
        toastr.success("@TempData["SUCCESS"].ToString()", "Success!");
    </script>
}
else if (TempData["ERROR"] != null)
{
    <script>
        toastr.error("@TempData["ERROR"].ToString()", "Error!");
    </script>
}

<script id="Time ">
    function startChange() {
        var endPicker = $("#@Html.IdFor(m => m.VisitLog.DateEnd)").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate());
            endDate = new Date(startDate);
            endDate.setDate(startDate.getDate()); //Modified by CANICE 20210801  endDate.setDate(endDate.getDate() + 14);
            endPicker.min(startDate);
            endPicker.value(startDate);
            //endPicker.max(endDate); //Commented by CANICE 20210801
        }
    }

    function endChange() {
        var startPicker = $("#@Html.IdFor(m => m.VisitLog.DateStart)").data("kendoDatePicker"),
            endDate = this.value();

        if (endDate) {
            startDate = new Date(endDate);
            startDate.setDate(endDate.getDate()); //Modified by CANICE 20210801 startDate.setDate(endDate.getDate() - 14)
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate());
            startPicker.max(endDate);
            //startPicker.min(startDate); //Commented by CANICE 20210801
        }
    }
    function timeStartChange() {
        var startTime = this.value(),
            endPicker = $("#@Html.IdFor(m => m.VisitLog.TimeEnd)").data("kendoTimePicker");

        if (startTime) {
            startTime = new Date(startTime);
            //endPicker.max(startTime);
            startTime.setMinutes(startTime.getMinutes() + this.options.interval);
            endPicker.min(startTime);
            endPicker.value(startTime);
        }
    }

</script>

<style>
    span.k-widget.k-tooltip-validation {
        display: inline-block;
        width: 160px;
        text-align: left;
        border: 0;
        padding: 0;
        margin: 0;
        background: none;
        box-shadow: none;
        color: red;
        padding-top: 10px;
    }
</style>
<script>
    function showGrid(Name, Company) {
        var dateFrom = $("#@Html.IdFor(m => m.VisitLog.DateStart)").val()
        var dateTo = $("#@Html.IdFor(m => m.VisitLog.DateEnd)").val()
        var Plant = $("#@Html.IdFor(m => m.VisitLog.Plant)").val()
        var tableVisitor = $("#VisitorList").DataTable({
            destroy: true,

            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "bLengthChange": false,
            "pageLength": 5,
            "scrollX" : true,
            "ajax": {
                "url": "@Url.Action("getListVisitor", "Appointment")",
                "type": "POST",
                "datatype": "json",
                "data": function (d) {
                    return $.extend({}, d, {
                        "Name": Name,
                        "Company": Company,
                        "dateFrom": dateFrom,
                        "dateTo": dateTo,
                        "Plant": Plant
                    });
                }
            },

                "columnDefs":
                [{
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [5],
                    "searchable": false,
                    "orderable": false
                }],

                "columns": [

                    { "data": "id", "name": "id", "autoWidth": true },
                    {
                        "data": "No",
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        "render": function (data, type, full, meta) {
                            return '<p style="cursor: pointer;" onclick="VIewImageVisitor(' + "'" + full.Photo +"'"+ ')">' + full.FullName + '</p>';
                        }
                    },
                    //{ "data": "FullName", "name": "FullName", "title": "Full Name", "autoWidth": true },
                    { "data": "Company", "name": "Company", "title": "Company", "autoWidth": true },
                    { "data": "JobDesc", "name": "JobDesc", "title": "Job Title", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            if (full.Remark == '0') {
                                return '<button class="btn btn-info"  onclick="setInviteVisitor(' + full.id + ')"><i class="fa fa-1x fa-external-link-square"></i> Invite</button>';
                            }
                            else {
                                return "Has Appointment with " + full.Remark;
                            }

                        }
                    },

                ]
            }

        );

        var tableVisitorAccept = $("#VisitorListSelected").DataTable({
            destroy: true,

            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 5,
            "scrollX": true,
            "bLengthChange": false,
            "ajax": {
                "url": "@Url.Action("getListVisitorInvite", "Appointment")",
                "type": "POST",
                "datatype": "json",
                "data" :function (d) {
                    return $.extend({}, d, {
                        "username": $("#@Html.IdFor(model => model.VisitLog.HostId)").val()
                    });
                }
            },
            "columnDefs":
            [{
                "targets": [0],
                "visible": false,
                "searchable": false
            },
            {
                "targets": [5],
                "searchable": false,
                "orderable": false
            }],

            "columns": [

                { "data": "id", "name": "id", "autoWidth": true },
                {
                    "data": "No",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },

                { "data": "FullName", "name": "FullName", "title": "Full Name", "autoWidth": true },
                { "data": "Company", "name": "Company", "title": "Company", "autoWidth": true },
                { "data": "JobDesc", "name": "JobDesc", "title": "Job Title", "autoWidth": true },
                {
                    "render": function (data, type, full, meta) {
                        return '<button class="btn btn-danger"  onclick="RemoveInvite(' + full.id + ')"><i class="fa fa-1x fa-trash"></i> Cancel</button>';
                    }
                },

            ]
            }
        );
        hideLoading('#searchVisitor');
    }
</script>
@Scripts.Render("~/Mousetrap")
@Styles.Render("~/DataTablesCS")
@Scripts.Render("~/DataTablesJS")

<div class="row" id="rowGridVisitorInv">
    <div class="col-md-10 col-md-offset-1">
        <div class="box ShimanoBox">
            <div class="box-header">
                <h3>Fill The Detail of Invitation</h3>
                <div class="box-tools pull-right">
                    <button type="button" id="btnCollapseDetailInv" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div id="rowAppointmentDetail">
                    @using (Html.BeginForm("saveAppointment", "Appointment", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @role = "form", @id = "formSaveAppointment" }))
                    {<div class="row">
                         <div class="col-md-4">
                             <div class="k-content">
                                 @Html.LabelFor(m => m.VisitLog.VisitType, "Visitor Type") <span style="color:red">* Required</span>
                                 @Html.Kendo().DropDownListFor(m => m.VisitLog.VisitType).OptionLabel("Select Visit Type...").HtmlAttributes(new { style = "width: 100%", @class = "", required = "required", data_required_msg = "Please Select the Visit Type" }).Filter("contains").DataTextField("VisitorType").DataValueField("Id").DataSource(source => { source.Read(read => { read.Action("getVisitTypeListPublicView", "MasterData"); }); }).Events(e => e.Change("RefreshArea"))
                             </div>
                         </div>
                         <div class="col-md-4">
                             <div class="k-content">
                                 @Html.LabelFor(m => m.VisitLog.Plant, "Plant") <span style="color:red">* Required</span>
                                 @Html.Kendo().DropDownListFor(m => m.VisitLog.Plant).OptionLabel("Select Plant...").HtmlAttributes(new { style = "width: 100%", @class = "", required = "required", data_required_msg = "Please Select the Plant" }).DataTextField("plantName").DataValueField("plantId").DataSource(source => { source.Read(read => { read.Action("getPlantList", "MasterData"); }); }).Events(e => e.Change("RefreshArea")).Value(Session["UsePlant"].ToString())
                             </div>
                         </div>
                        
                        <div class="col-md-4">
                            <div class="k-content">
                                @Html.HiddenFor(m => m.VisitLog.CCMail)
                                @Html.Label("CCMail", "Email CC for Check IN")<br />
                                @Html.Kendo().MultiSelect().Name("CCMail").HtmlAttributes(new { style = "width:100%" }).Filter("contains").DataSource(source => { source.Read(read => { read.Action("GetHostDetail", "Visitor"); }).ServerFiltering(false); }).DataTextField("UseNam").DataValueField("UseID").Placeholder("SELECT CC EMAIL").AutoClose(true).TagMode(TagMode.Multiple)
                            </div>
                        </div>
                    </div>
                        <br />
                        <div class="row">
                            <div class="col-md-4">
                                <div class="k-content">
                                    @Html.LabelFor(m => m.VisitLog.HostId, "Host Name : ")<span style="color:red">* Required</span><br />
                                    @(Html.Kendo().DropDownListFor(m => m.VisitLog.HostId)
                                                                    .DataTextField("UseNam").DataValueField("UseID")
                                                                    .HtmlAttributes(new { style = "width:100%", required = "required", @class = "ShimanoTextBox" })
                                                                    .Filter("contains")
                                                                    .DataSource(source =>
                                                                    {
                                                                        source.Read(read =>
                                                                        {
                                                                            read.Action("GetHostDetail", "Visitor");
                                                                        })
                                                                        .ServerFiltering(false);
                                                                    }).OptionLabel("Select Host")
                                                                    .Value(Session["UseID"].ToString()))
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="k-content">
                                    @Html.LabelFor(m => m.VisitLog.HostDept, "Host Department : ")<span style="color:red">* Required</span><br />
                                    @(Html.Kendo().DropDownListFor(m => m.VisitLog.HostDept)
                                                                    .DataTextField("Dept").DataValueField("Dept")
                                                                    .HtmlAttributes(new { style = "width:100%", required = "required", @class = "ShimanoTextBox" })
                                                                    .Filter("contains")
                                                                    .DataSource(source =>
                                                                    {
                                                                        source.Read(read =>
                                                                        {
                                                                            read.Action("GetHostDepartment", "Visitor").Data("getddlPlantValue");
                                                                        })
                                                                        .ServerFiltering(false);
                                                                    }).OptionLabel("Select Host Department")
                                                                    .Events(e => e.Change("RefreshArea"))
                                                                    .Value(Session["UseDep"].ToString()))
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="k-content">
                                    @Html.HiddenFor(m => m.VisitLog.Area)
                                    @Html.Label("VisitArea", "Area") <span style="color:red">* Required</span>
                                    @Html.Kendo().MultiSelect().Name("VisitArea").HtmlAttributes(new { style = "width:100%", required = "required", @class = "", data_required_msg = "Please Select the Area" }).DataSource(source => { source.Read(read => { read.Action("getAreaList", "MasterData").Data("DataAreaParameter"); }).ServerFiltering(false); }).DataTextField("areaName").DataValueField("areaId").Placeholder("SELECT AREA").AutoClose(false).TagMode(TagMode.Multiple)

                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-8">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="k-content">
                                            @Html.LabelFor(m => m.VisitLog.DateStart, "Date Start") <span style="color:red">* Required</span>
                                            @(Html.Kendo().DatePickerFor(m => m.VisitLog.DateStart)
.Start(CalendarView.Month)
.Depth(CalendarView.Month)
.Min(DateTime.Today)
.Max(DateTime.Today.AddYears(1)).Events(e => e.Change("startChange"))
.Format("yyyy-MM-dd")
.Value(DateTime.Today)
.HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                                            )
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="k-content">
                                            @Html.LabelFor(m => m.VisitLog.DateEnd, "Date End") <span style="color:red">* Required</span>
                                            @(Html.Kendo().DatePickerFor(m => m.VisitLog.DateEnd)
.Start(CalendarView.Month)
.Depth(CalendarView.Month)
.Min(DateTime.Today)
.Events(e => e.Change("endChange")) //Modified by CANICE 20210801 .Max(DateTime.Today.AddDays(14)).Events(e => e.Change("endChange"))
.Format("yyyy-MM-dd")
.Value(DateTime.Today)
.HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                                            )
                                        </div>
                                    </div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="k-content">
                                            @Html.LabelFor(m => m.VisitLog.TimeStart, "Time Start") <span style="color:red">* Required</span>
                                            @(Html.Kendo().TimePickerFor(m => m.VisitLog.TimeStart).Format("HH:mm")
.Min("8:00")
.Max("16:00").Events(e => e.Change("timeStartChange"))
.Value("8:00")
.HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="k-content">
                                            @Html.LabelFor(m => m.VisitLog.TimeEnd, "Time End") <span style="color:red">* Required</span>
                                            @(Html.Kendo().TimePickerFor(m => m.VisitLog.TimeEnd).Format("HH:mm")
.Min("8:00")
.Max("16:00")
.Value("8:00")
.HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="k-content">
                                    @Html.LabelFor(m => m.VisitLog.Remark, "Remark (Purpose of Visit)") <span style="color:red">* Required</span>
                                    @Html.TextAreaFor(m => m.VisitLog.Remark, 3, 3, new { @class = "k-textbox", style = "width: 100%; padding:10px", required = "required" })
                                </div>
                            </div>
                        </div>
                        <button hidden="hidden" type="submit" id="btnSubmitAppointment">save</button>
                    }
                    <div class="row">

                        <div class="col-md-12">
                            <div class="col-md-6">
                            </div>
                            <div class="col-md-2"></div>
                            <div class="col-md-2 pull-right">
                                <button id="btnContinue" class="btn btn-lg btn-success pull-right" onclick="ContinueToNext(2)"> Continue <i class="fa fa-mail-forward"></i></button>
                            </div>
                            <div class="col-md-2 pull-right">
                                <button id="btnViewApprover" class="btn btn-lg btn-primary" onclick="ViewApprover()"> View Approver <i class="fa fa-eye"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="row" id="rowSearchVisitor" hidden="hidden">
    <div class="col-md-12">
        <div class="box ShimanoBox">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("searchVisitor", "Search By Name : ")
                            @(Html.Kendo()
                .TextBox()
                .Name("searchVisitor")
                .HtmlAttributes(new { @class = "form-control ShimanoTextBox", @style = "width:100%" }))
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("searchCompany", "Search By Company : ")
                            @(Html.Kendo()
                .TextBox()
                .Name("searchCompany")
                .HtmlAttributes(new { @class = "form-control ShimanoTextBox", @style = "width:100%" }))
                        </div>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-info btn-lg btn-block" id="btnGetUpload" onclick="fnOpenUploadWindow()"><i class="fa fa-upload"></i> Upload Visitor</button>

                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-success btn-lg btn-block" id="btnAddVisitor" onclick="registerVisitor()"><i class="fa fa-user"></i> Register New Visitor</button>
                    </div>
                    <br />
                </div>
            </div>
        </div>

    </div>
</div>

<div class="row" id="rowGridVisitor" hidden="hidden">
    <div class="col-md-6">
        <div class="box ShimanoBox">
            <div class="box-header">

                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="col-md-12">
                    <div style="width:100%; margin:0 auto;">
                        <table id="VisitorList" class="table table-striped table-bordered dt-responsive" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>No</th>
                                    <th>FullName</th>
                                    <th>Company</th>
                                    <th>Job Description</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-6">
        <div class="box ShimanoBox">
            <div class="box-header">

                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="col-md-12">
                    <div style="width:100%; margin:0 auto;">
                        <table id="VisitorListSelected" class="table table-striped table-bordered dt-responsive" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>No</th>
                                    <th>FullName</th>
                                    <th>Company</th>
                                    <th>Job Description</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="row" id="rowButtonSave" hidden="hidden">
    <div class="col-md-8 col-md-offset-2">
        <div class="box ShimanoBox">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <button id="btnSaveAppointment" class="btn btn-lg btn-primary btn-block"> <i class="fa fa-save"></i> Save Appointment</button>
                    </div>
                    <br />
                </div>
            </div>
        </div>

    </div>
</div>


<div class="modal fade" id="modalImage">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" style="color:white" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" id="title">Photoes</h3>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <img height="200" id="PhotoUser" src="@Url.Content("~/Uploads/PhotoVisitor/no_image.png")" />
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <div class="col-md-6">
                    <a href="#" class="btn btn-danger btn-block" data-dismiss="modal"><i class="fa fa-times"></i> Close</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- The Modal -->
<div class="modal" id="ModalApprovalLevel">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Approver List</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <table class="table table-striped" id="tblApprovalLevel">
                    <thead>
                        <tr>
                            <th>Approval Level</th>
                            <th>Approval</th>
                            <th>Visitor Type</th>
                            <th>Category</th>
                            <th>Department</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<script>
    function RefreshArea() {
        $("#VisitArea").data("kendoMultiSelect").dataSource.read();
        getData();
    }
    $('#searchVisitor').on('keypress', function (e) {
        if (e.which === 13) {
            searchVisitor();
            $('#rowButtonSave').slideDown('slow')
        }
    });
    $('#searchCompany').on('keypress', function (e) {
        if (e.which === 13) {
            searchVisitor();
            $('#rowButtonSave').slideDown('slow')
        }
    });
    function searchVisitor() {
        if (performValidation()) { // Added by CANICE 20210407
            displayLoading('#searchVisitor');
            var name = $('#searchVisitor').val();
            var Company = $('#searchCompany').val();
            $('#rowGridVisitor').slideDown("slow")
            $('#rowGridVisitorInv').slideDown("slow")
            showGrid(name, Company);
        }
    }
    function setInviteVisitor(Id) {
        if (performValidation()) { //Added by CANICE 20210407
            $.ajax({
                url: '@Url.Action("addVisitorInvite", "Appointment")',
                cache: false,
                type: "POST",
                data: { Id: Id, hostid: $("#@Html.IdFor(model => model.VisitLog.HostId)").val() },
                success: function (data) {
                    if (data.Success === true) {
                        //toastr.success(data.message, "Success!");
                        searchVisitor();
                    }
                    else {
                        toastr.warning(data.Message, "Warning!");
                    }
                },
                error: function () {
                    toastr.error("Something wrong with this, please call IT!", "ERROR!");
                }

            });
        }
    }
    function RemoveInvite(Id) {
        if (performValidation()) { //Added by CANICE 20210407
            $.ajax({
                url: '@Url.Action("removeVisitorInvite", "Appointment")',
                cache: false,
                type: "POST",
                data: { Id: Id , hostid: $("#@Html.IdFor(model => model.VisitLog.HostId)").val()},
                success: function (data) {
                    if (data.Success === true) {
                        //toastr.success(data.message, "Success!");
                        searchVisitor();
                    }
                    else {
                        toastr.warning(data.Message, "Warning!");
                    }
                },
                error: function () {
                    toastr.error("Something wrong with this, please call IT!", "ERROR!");
                }

            });
        }
    }


</script>
<script>
    $(document).ready(function () {
        funcRenderTable();
        var totrecords = 0;
        DP.AJaxAll({}, "@Url.Action("GetCheckUserGroup", "User")", function (data) {
            if (data.Success) {
                $("#rowGridVisitorInv").show()
            }
            else {
                $("#rowGridVisitorInv").hide()
                ShiMessage.error("Error!", data.Message)
            }
        });
        DP.AJaxAll({}, "@Url.Action("GetDateMinMax", "Appointment")", function (data) {
            if (data.Success) {
                startPicker = $("#VisitLog_TimeStart").data("kendoTimePicker");
                endPicker = $("#VisitLog_TimeEnd").data("kendoTimePicker");
                startPicker.min(data.data.TIMESTARTMIN);
                startPicker.max(data.data.TIMESTARTMAX);
                endPicker.min(data.data.TIMEENDMIN);
                endPicker.max(data.data.TIMEENDMAX);
                var today = new Date();
                var hoursStart = today.getHours() + 1;
                var hoursEnd = today.getHours() + 2;
                startPicker.value(hoursStart + ':00');
                endPicker.value(hoursEnd + ':00');


            }
            else {
                $("#rowGridVisitorInv").hide()
                ShiMessage.error("Error!", data.Message)
            }
        });
        $('#@Html.IdFor(m=>m.Visitor.Phone)').keyup(function () {
            var numbers = $(this).val();
            $(this).val(numbers.replace(/\D/, ''));
        });
    });
    $("#VisitArea").change(function(){
        var multi = $("#VisitArea").getKendoMultiSelect(),
        multiDataItems = multi.dataItems(),
        selectedProducts = [];
        var Id = "";
        for (var i = 0; i < multiDataItems.length; i += 1) {
            var currentProduct = multiDataItems[i];
            Id = Id + currentProduct.areaId + ", ";
        }
        $("#@Html.IdFor(m=>m.VisitLog.Area)").val(Id);
        console.log(Id);
    });
    $("#CCMail").change(function () {
        var multi = $("#CCMail").getKendoMultiSelect(),
        multiDataItems = multi.dataItems(),
        selectedProducts = [];
        var Id = "";
        for (var i = 0; i < multiDataItems.length; i += 1) {
            var currentProduct = multiDataItems[i];
            Id = Id + currentProduct.UseID + ", ";
        }
        $("#@Html.IdFor(m=>m.VisitLog.CCMail)").val(Id);
        //console.log(Id);
    });
    $(function () {
        var validator = $("#formRegisterVisitor").kendoValidator().data("kendoValidator");
        var status = $(".status");

        $("#formRegisterVisitor").submit(function (event) {
            event.preventDefault();
            if (validator.validate()) {
                toastr.info("We Will Process Your Data", "Please Wgait")
                $("#btnSaveRegister").hide("")
                $("#loadingSubmit").show("")
            } else {
                status.text("Oops! There is invalid data in the form.")
                    .removeClass("valid")
                    .addClass("invalid");
            }
        })
    });

    function ContinueToNext(text) {
        if (performValidation()) {
            $('#rowSearchVisitor').slideDown('slow')
            $('#btnCollapseDetailInv').trigger('click')
        }
    }
</script>
<script>
    function displayLoading(target) {
        var element = $(target);
        kendo.ui.progress(element, true);
    }
    function hideLoading(target){
        var element = $(target);
        kendo.ui.progress(element, false);
    }

</script>
<script>
    $("#btnSaveAppointment").click(function () {
        if (performValidation()) {
            $("#btnSubmitAppointment").trigger('click')
            ShowLoading(true, "test");
        }

    })


    function performValidation() {
        var Host = $("#@Html.IdFor(model => model.VisitLog.HostId)").val()
        if (Host == "") {
            toastr.error("Field Host Cannot be null or Zero", "Transaction Failed!!")
            return false;
        }
        var Dept = $("#@Html.IdFor(model => model.VisitLog.HostDept)").val()
        if (Dept == "") {
            toastr.error("Field Department Cannot be null or Zero", "Transaction Failed!!")
            return false;
        }
        var Area = $("#@Html.IdFor(model => model.VisitLog.Area)").val()
        var DateStart = $("#@Html.IdFor(model => model.VisitLog.DateStart)").val()
        var DateEnd = $("#@Html.IdFor(model => model.VisitLog.DateEnd)").val()
        var TimeStart = $("#@Html.IdFor(model => model.VisitLog.TimeStart)").val()
        var TimeEnd = $("#@Html.IdFor(model => model.VisitLog.TimeEnd)").val()
        if (Area == "") {
            toastr.error("Field Area Cannot be null or Zero", "Transaction Failed!!")
            return false;
        }
        if (DateStart == "" || DateEnd == "" || TimeStart == "" || TimeEnd == "") {
            toastr.error("Field Date and time For Appointment Cannot be null or Zero", "Transaction Failed!!")
            return false;
        }
        var Remark = $("#@Html.IdFor(model => model.VisitLog.Remark)").val()
        if (Remark == "") {
            toastr.error("Field Remark(Purpose of Visit) Cannot be Empty", "Transaction Failed!!")
            return false;
        }
        if (totrecords < 1)
        {
            toastr.error("Please maintain approval level for this visitor type: " + $("#@Html.IdFor(m => m.VisitLog.VisitType)").data("kendoDropDownList").text() + " and department: " + $("#@Html.IdFor(m => m.VisitLog.HostDept)").val() + ".");
            return false;
        }
        return true;
    }
</script>
<script>
    function ViewApprover()
    {
        var Plant = $("#@Html.IdFor(m => m.VisitLog.Plant)").val();
        var Department = $("#@Html.IdFor(m => m.VisitLog.HostDept)").val();
        var VisitorType = $("#@Html.IdFor(m => m.VisitLog.VisitType)").data("kendoDropDownList").text();
        if (Plant.length < 1)
        {
            toastr.error("Please make sure Plant has selected!")
        }
        else if (Department.length < 1)
        {
            toastr.error("Please make sure Host Department has selected!")
        }
        else if (VisitorType.length < 1) {
            toastr.error("Please make sure VisitorType has selected!")
        }
        else
        {
            getData();
            $('#ModalApprovalLevel').modal('show');
        }

    }
    function getData()
    {
        var Plant = $("#@Html.IdFor(m => m.VisitLog.Plant)").val();
        var Department = $("#@Html.IdFor(m => m.VisitLog.HostDept)").val();
        var VisitorType = $("#@Html.IdFor(m => m.VisitLog.VisitType)").data("kendoDropDownList").text();
        $.ajax({
            //url: "../MasterData/ViewApproverAppointment",
            url: '@Url.Action("ViewApproverAppointment", "MasterData")',
            method: "POST",
            dataType: "JSON",
            data: {
                Plant: Plant,
                Department: Department,
                VisitorType: VisitorType,
            },
            success: function (j) {
                tblApprovalLevel.mDataTable.clear();
                $.each(j.xdataTable, function (i, st) {
                    tblApprovalLevel.mDataTable.row.add(st);
                })
                tblApprovalLevel.mDataTable.draw();
            },
            error: function (xhr, error, text) {
                toastr.error("Failed Query Get View Table, Please contact IT")
            }
        });
        $.ajax({
            //url: "../MasterData/ViewApproverAppointmentRecord",
            url: '@Url.Action("ViewApproverAppointmentRecord", "MasterData")',
            method: "POST",
            dataType: "JSON",
            data: {
                Plant: Plant,
                Department: Department,
                VisitorType: VisitorType,
            },
            success: function (j) {
                console.log(j.xdataTable[0].ApprovalLevel);
                totrecords = j.xdataTable[0].ApprovalLevel;
            },
            error: function (xhr, error, text) {
                toastr.error("Failed Query Get View Table, Please contact IT")
            }
        });
    }
    function funcRenderTable() {
        var table = "";
        var options = "";

        // begin first table
        options = {
            responsive: true,
            paging: true,

            columns: [
                { "data": "ApprovalLevel" },
                { "data": "Approval" },
                { "data": "VisitorType" },
                { "data": "Category" },
                { "data": "Department" },
            ],
        };

        table = $('#tblApprovalLevel').DataTable(options);
        tblApprovalLevel.mDataTable = table;
    }
</script>

<script>
    function VIewImageVisitor(image) {
        CheckPhoto('@Url.Content("~/Uploads/PhotoVisitor/")' + image, "PhotoUser")
        $("#modalImage").modal({
            backdrop: "static",
            keyboard: false,
            show: true
        });
    }
    function CheckPhoto(src, Loc) {
        var srcDef = '@Url.Content("~/Uploads/PhotoVisitor/no_image_2.jpg")';
        checkSrcPhoto(src)
          .on("error", function (e) {
              $('#' + Loc).attr('src', srcDef)
          })
          .on("load", function (e) {
              $('#' + Loc).attr('src', src)
          })
    }
    function checkSrcPhoto(src) {
        return $("<img>").attr('src', src);
    }
    function DataAreaParameter() {
        return {
            plant: $("#@Html.IdFor(m=>m.VisitLog.Plant)").val(),
            visitType: $("#@Html.IdFor(m=>m.VisitLog.VisitType)").val()
        }
    }
    function DataPlantParameter()
    {
        return {
            plant: $("#@Html.IdFor(m=>m.VisitLog.Plant)").val()
        }
    }
</script>
<script>
    function fnOpenUploadWindow() {
        $("#windowUploadFile").data("kendoWindow").open().center();
    }
</script>


@{
    Html.RenderPartial("_uploadVisitor");
    Html.RenderPartial("_AddVisitor");
}

<script>
    function registerVisitor() {
        $.ajax({
            url: '@Url.Action("GetAllowUnknown", "MasterData")',
            cache: false,
            type: "POST",
            data: { VisitorType: $("#@Html.IdFor(m => m.VisitLog.VisitType)").data("kendoDropDownList").text() },
            success: function (data) {
                console.log(data);
                console.log(data.xdataTable[0].Unknown);
                if (data.xdataTable[0].Unknown == false) {
                    $('#divCheckboxUnknown').attr("Hidden", "Hidden");
                }
                else {
                    $('#divCheckboxUnknown').removeAttr("Hidden", "Hidden");

                }

            },
            error: function (data) {
                toastr.error("Please Call IT");
            }
        });
        $("#modalRegisterVisitor").modal("show");
    }
    function getddlPlantValue() {
        return {
            Plant: $("#@Html.IdFor(m => m.VisitLog.Plant)").val()
        }
    }
</script>