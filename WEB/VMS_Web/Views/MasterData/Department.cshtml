@using VMS.Library
@using VMS.Web.Models;
@using VMS.Web.ViewModels;
@model mmDepartment
@{
    ViewBag.Title = "Department";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@Styles.Render("~/DataTablesCS")
@Scripts.Render("~/DataTablesJS")

<p>Department</p>
<div class="row">
    <div class="col-md-12">
        <div class="box ShimanoBox">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-2">
                                <div class="k-content">
                                    @Html.Label("searchPlant", "Plant")
                                    @Html.Kendo().DropDownList().Name("searchPlant").OptionLabel("Select Plant...").HtmlAttributes(new { style = "width: 100%", @class = "" }).DataTextField("plantName").DataValueField("plantId").DataSource(source => { source.Read(read => { read.Action("getPlantList", "MasterData"); }); }).Value(Session["UsePlant"].ToString()).Events(e => e.Change("getData"))
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div style="padding-top:25px">
                                    <button type="button" class="btn btn-info" onclick="getData()"><i class="fa fa-info-circle"></i> Show</button>
                                    <button type="button" class="btn btn-primary" onclick="AddEditDept('', '', '', 'ADD')"><i class="fa fa-plus"></i> Add</button>
                                    <button type="button" class="btn btn-warning" onclick="ExportData()"><i class="fa fa-download"></i> Export</button>
                                </div>
                            </div>
                        </div><br />
                        <hr />
                        <div class="row">
                            <div class="col-md-12">
                                <table class="table table-bordered table-hover table-checkable" id="mmDepartment" style="margin-top: 13px !important">
                                    <thead>
                                        <tr style="color:white;background-color:#30505F;border-color:Transparent;font-weight:bold;">
                                            <th>Plant</th>
                                            <th>Dept</th>
                                            <th>DeptName</th>
                                            <th>UpdateBy</th>
                                            <th>UpdateAt</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="contact" class="modal fade" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            @*@using (Ajax.BeginForm("SaveAutoApproval", "MasterData",
                    new AjaxOptions
                    {
                        OnSuccess = "onSuccess",
                        OnFailure = "onFailure",
                        LoadingElementId = "progress",
                        OnBegin = "onLoading"
                    }))
            {*@
                <div class="modal-header">
                    <button class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h3 class="modal-title" id="title">Department :</h3><label id="lblAction" >asdasdasf</label>
                    
                </div>

                @*<form id="contact-form" class="form-horizontal modal-body" role="form">*@
                <div class="form-group">

                    <label class="control-label col-sm-3">Plant <sup style="color:red">*</sup></label>

                    <div class="col-sm-9">
                        <div>
                            @Html.Kendo().DropDownListFor(model => model.Plant).OptionLabel("Select Plant...").HtmlAttributes(new { style = "width: 100%" }).DataTextField("plantName").DataValueField("plantId").DataSource(source => { source.Read(read => { read.Action("getPlantList", "MasterData"); }); }).Value(Session["UsePlant"].ToString())
                        </div>
                    </div>

                </div>
                <br />
                <div class="form-group">

                    <label class="control-label col-sm-3">Dept <sup style="color:red">*</sup></label>

                    <div class="col-sm-9">
                        @(Html.Kendo()
.TextBoxFor(model => model.Dept)
.HtmlAttributes(new { @class = "form-control", style = "width:100%", required = "required", data_required_msg = "Please Fill the Department" }))
                    </div>

                </div>
                <br />
                <div class="form-group">

                    <label class="control-label col-sm-3">Dept Name <sup style="color:red">*</sup></label>

                    <div class="col-sm-9">
                        @(Html.Kendo()
.TextBoxFor(model => model.DeptName)
.HtmlAttributes(new { @class = "form-control", style = "width:100%", required = "required", data_required_msg = "Please Fill the Department Name" }))
                    </div>

                </div>
                <div class="modal-footer">
                    <div>
                        <div class="text-right" style="padding-right:10px; padding-top:20px;">
                            <button type="submit" class="btn btn-success btn-md" id="btnLabel" onclick="SaveData();">Save! <i class="fa fa-save"></i></button>
                        </div>
                    </div>
                </div>

                @*</form>*@
            @*}*@
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        funcRenderTable();
        getData();
    });
    function funcRenderTable() {
        var table = "";
        var options = "";

        // begin first table
        options = {
            responsive: true,
            paging: true,

            columns: [
                { "data": "Plant" },
                { "data": "Dept" },
                { "data": "DeptName" },
                { "data": "UpdateBy" },
                { "data": "UpdateAt" },
            ],
            columnDefs: [
                {
                    targets: 5,
                    render: function (data, type, full, meta) {
                        var output = ``;
                        output = '<div class="btn-toolbar mb-3" role="toolbar" aria-label="Toolbar with button groups">'
                        output += '          <div class="btn-group mr-2" role="group" aria-label="First group">'
                        output += '             <button class="btn btn-info"  onclick="AddEditDept(\'' + full.Plant + '\', \'' + full.Dept + '\',\'' + full.DeptName + '\',\'UPDATE\')"><i class="fa fa-1x fa-plus"></i> Edit</button>'
                        output += '             <button class="btn btn-danger"  onclick="funcDelete(\'' + full.Plant + '\',\'' + full.Dept + '\')"><i class="fa fa-trash"> Delete</i></button>'
                        output += '         </div>'
                        output += '        </div>'
                        return output;
                    },
                },
            ],
        };

        table = $('#mmDepartment').DataTable(options);
        mmDepartment.mDataTable = table;
    }
    function getData() {
        var Plant = $('#searchPlant').val();
        //console.log(VisitorType, Plant, Department)
        $.ajax({
            //url: "../MasterData/GetmmDepartment",
            url: '@Url.Action("GetmmDepartment", "MasterData")',
            method: "POST",
            dataType: "JSON",
            data: {
                Plant: Plant,
            },
            success: function (j) {
                //console.log(j.xdataTable);
                mmDepartment.mDataTable.clear();
                $.each(j.xdataTable, function (i, st) {
                    mmDepartment.mDataTable.row.add(st);
                })
                mmDepartment.mDataTable.draw();
            },
            error: function (xhr, error, text) {
                toastr.error("Failed Query Get View Table, Please contact IT")
            }
        });
    }
    function SaveData() {
        var Plant = $("#@Html.IdFor(model => model.Plant)").val();
        var Dept = $("#@Html.IdFor(model => model.Dept)").val();
        var DeptName = $("#@Html.IdFor(model => model.DeptName)").val();
        var Action = $('#lblAction').text();
        if (Dept == "") {
            toastr.error("Department cannot empty.");
            return;
        }
        else if (DeptName == "") {
            toastr.error("Department Name.");
            return;
        }
        else if (Plant == "") {
            toastr.error("Please select Plant.");
            return;
        }
        else {
            $("#btnLabel").attr("disabled", true);

            $.ajax({
                //url: "../MasterData/SaveEditVisitor",
                url: '@Url.Action("SaveDept", "MasterData")',
                method: "POST",
                dataType: "JSON",
                data: {
                    Plant: Plant,
                    Department: Dept,
                    DepartmentName: DeptName,
                    Action: $("#lblAction").text(),
                },
                success: function (j) {
                    if (j.Result == true) {
                        if (j.Data[0][0].Status == "success") {
                            //HIDE MODAL UPLOAD
                            toastr.success(j.Msg);
                            $("#btnLabel").attr("disabled", false);
                            getData();
                            $('#contact').modal('hide');
                        }
                    }
                    else {
                        toastr.error("Error: " + j.Msg + ", Please contact IT")
                    }
                    $("#btnLabel").attr("disabled", false);
                },
                error: function (xhr, error, text) {
                    toastr.error("Failed Query upload, Please contact IT" + xhr)
                    $("#btnLabel").attr("disabled", false);
                }
            });
        }
        
        //$("#btnEditVisitorDetail").removeAttr("disabled");
    }
</script>
<script>
    function AddEditDept(Plant, Department, DepartmentName, Action) {
        $("#contact").modal("show");
        if (Action == "UPDATE") {
            $("#title").html("Edit Department");
            $("#btnLabel").html("Update");
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetDeptDetail", "MasterData")',
                data: {
                    Plant: Plant,
                    Dept: Department,
                },
                success: function (data) {
                    $("#@Html.IdFor(model => model.Plant)").data("kendoDropDownList").value(data.Plant);
                    $("#@Html.IdFor(model => model.Dept)").val(data.Dept);
                    $("#@Html.IdFor(model => model.DeptName)").val(data.DeptName);
                }
            });
            $("#@Html.IdFor(model => model.Plant)").data("kendoDropDownList").readonly();
            $("#@Html.IdFor(model => model.Dept)").prop('readonly', true);
            $('#lblAction').text('UPDATE');
        }
        else {
            $("#title").html("Add Department");
            $("#btnLabel").html("Save");
            $("#@Html.IdFor(model => model.Plant)").prop('readonly', false);
            $("#@Html.IdFor(model => model.Dept)").val('');
            $("#@Html.IdFor(model => model.DeptName)").val('');
            $("#@Html.IdFor(model => model.Plant)").data("kendoDropDownList").readonly(false);
            $("#@Html.IdFor(model => model.Dept)").prop('readonly', false);
            $('#lblAction').text('ADD');
        }
    }
    function ExportData() {
        var Plant = $('#searchPlant').val();
        window.open("@Url.Action("ExportFunction", "MasterData")?MasterData=Department&Plant=" + Plant + "&Department=");
    }
    function funcDelete(Plant, Dept) {
        Swal.fire({
            title: 'Are you sure!',
            text: "Do you want to delete this item?",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            console.log(result.value);
            if (result.value == true) {
                $.ajax({
                    //url: "../MasterData/DeleteAutoApprovalByID",
                    url: '@Url.Action("DeleteDept","MasterData")',
                    method: "POST",
                    dataType: "JSON",
                    data: {
                        Plant: Plant,
                        Dept: Dept,
                    },
                    success: function (j) {
                        console.log(j);
                        if (j.Success == true) {
                            //toastr[j.Data[0][0].Status](j.Data[0][0].Message)
                            toastr.success("Data Successfully Delete.")
                            getData();
                        }
                        else {
                            toastr.error("Failed execution, Please contact IT")
                        }
                        $("#btnLabel").attr("disabled", false);
                    },
                    error: function (xhr, error, text) {
                        toastr.error("Failed Query Delete, Please contact IT")
                        $("#btnLabel").attr("disabled", false);
                    }
                });
            }
            //else {
            //    toastr.error("ID Not Found, Please reload this page or contact IT")
            //}

        })

    }
</script>
<script src="~/Scripts/sweetalert2@11.js"></script>