@model VMS.Web.Models.AppointmentViewModel
@{
    ViewBag.Title = "Visitor In";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@Scripts.Render("~/Mousetrap")
@Scripts.Render("~/Webcam")
@Styles.Render("~/DataTablesCS")
@Scripts.Render("~/DataTablesJS")
<script type="text/javascript" src=@Url.Content("~/Scripts/webcam.min.js")></script>
<style scoped>
    .k-textboxlarge {
        height: 40px;
        width: 100%;
        font-size: 20px;
    }

    .form-control {
        border-radius: 10px;
    }
</style>
<script>
    function showGrid(Name) {
        $('#boxGridName').show("slow");
        var table = $("#VisitorGrid").DataTable({
            destroy: true,
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 10,
            "ajax": {
                "url": "@Url.Action("ListofVisitor", "Visitor")",
                "type": "POST",
                "datatype": "json",
                "data": function (d) {
                    return $.extend({}, d, {
                        "Name": Name
                    });
                }
            },

                "columnDefs":
                [{
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [5],
                    "searchable": false,
                    "orderable": false
                }],

                "columns": [

                    { "data": "id", "name": "id", "autoWidth": true },
                    {
                        "data": "No",
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "FullName", "name": "FullName", "title": "Full Name", "autoWidth": true },
                    { "data": "Company", "name": "Company", "title": "Company", "autoWidth": true },
                    { "data": "Phone", "name": "Phone", "title": "Phone", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            return '<button class="btn btn-info"  onclick="OpenModalVisitor(' + full.id + ')"><i class="fa fa-1x fa-external-link-square"></i> Select This Visitor</button>';
                        }
                    },

                ]
            }
        );
    }
</script>
<script>
    $(document).ready(function () {
        $('#txtSearchById').keyup(function () {
            var numbers = $(this).val();
            $(this).val(numbers.replace(/\D/, ''));
        });
        $('#CardRegister').keyup(function () {
            var numbers = $(this).val();
            $(this).val(numbers.replace(/\D/, ''));
        });
    });
</script>
@Html.Hidden("CardScanned")
@Html.Hidden("photoSource")

@*<video id="video" width="640" height="480" autoplay></video>
    <button id="snap">Snap Photo</button>
    <canvas id="canvas" width="640" height="480"></canvas>

    <script>

        // Elements for taking the snapshot
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');
        var video = document.getElementById('video');

        // Trigger photo take
        document.getElementById("snap").addEventListener("click", function() {
            context.drawImage(video, 0, 0, 640, 480);
        });

        // Grab elements, create settings, etc.
        var video = document.getElementById('video');

        // Get access to the camera!
        if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            // Not adding `{ audio: true }` since we only want video now
            navigator.mediaDevices.getUserMedia({ video: true }).then(function(stream) {
                //video.src = window.URL.createObjectURL(stream);
                video.srcObject = stream;
                video.play();
            });
        }
    </script>*@

<div class="row">
    <div class="col-md-6 col-md-offset-3" id="boxSearchById">
        <div class="box ShimanoBox">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label("txtSearchById", "TAP ID Card : ")
                            @(Html.Kendo()
                    .TextBox()
                    .Name("txtSearchById").HtmlAttributes(new { @class = "form-control k-textboxlarge text-center" }))
                        </div>

                    </div>

                </div>
            </div>
            <!-- /.box-body -->

        </div>
    </div>
    <div class="col-md-8 col-md-offset-2" id="boxSearchByName" hidden="hidden">
        <div class="box ShimanoBox">
            <div class="box-header">
                Register Visitor's Card
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label("txtSearchName", "Search Name/Company Name : ")
                            @(Html.Kendo()
                    .TextBox()
                    .Name("txtSearchName").HtmlAttributes(new { @class = "form-control k-textboxlarge text-center" }))
                        </div>

                    </div>
                    @*<div class="col-md-4">
                                @(Html.Kendo().Button()
                        .Name("btnSearch")
                        .HtmlAttributes(new { type = "button", @class = "k-primary" })
                        .Content("Search Vendor")
                        .Icon("filter").Events(ev => ev.Click("showModalSearch")))
                            </div>*@

                </div>
            </div>
            <!-- /.box-body -->

        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-8 col-md-offset-2" id="boxGridName">
        <div class="box ShimanoBox">
            <div class="box-header">
                List of Visitor
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div style="width:100%; margin:0 auto;">
                            <table id="VisitorGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>No</th>
                                        <th>FullName</th>
                                        <th>Company</th>
                                        <th>Phone</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
            <!-- /.box-body -->

        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6" id="boxDetailVisitor" hidden="hidden">
        <div class="box ShimanoBox">
            <div class="box-header">
                Detail Visitor
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Hidden("detailId")
                            @Html.Label("detailName", "Name : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("detailName").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("detailCompany", "Company : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("detailCompany").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>

                    </div>

                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("detailJobDesc", "Job Description : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("detailJobDesc").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("detailPhone", "Phone Number : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("detailPhone").HtmlAttributes(new { @class = "form-control", @readonly="readonly" }))
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("detailEmail", "Email : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("detailEmail").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                </div>
                <div class="row" id="rowCreateAppointment" hidden="hidden">
                    <div class="col-md-4 pull-right">
                        <button class="btn btn-warning" id="btnCreateAppointment" onclick="CreateAppointment()"><i class="fa fa-search"></i> Create Appointment</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.box-body -->
    </div>
    <div class="col-md-6" id="boxDetailHost" hidden="hidden">
        <div class="box ShimanoBox">
            <div class="box-header">
                Detail Host
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Hidden("HostLogId")
                            @Html.Hidden("HostId")
                            @Html.Label("HostName", "Name : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("HostName").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("HostDepartment", "Department : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("HostDepartment").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("HostTel", "Ext No. : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("HostTel").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("AppointmentStart", "Appointment Start : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("AppointmentStart").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("AppointmentEnd", "Appointment End : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("AppointmentEnd").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("VisitorType", "Visitor Type : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("VisitorType").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("ApprovalHost", "Approval : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("ApprovalHost").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("Remark", "Remark : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("Remark").HtmlAttributes(new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <!-- /.box-body -->
    </div>


</div>
<div class="row">
    <div class="col-md-6" id="boxDetailVisitorPhoto" hidden="hidden">
        <div class="box ShimanoBox">
            <div class="box-header">
                Photo Visitor
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-5">
                        <div class="card-img">
                            <img height="200" id="detailPhoto" src="@Url.Content("~/Uploads/PhotoVisitor/no_image.png")" />
                        </div>
                    </div>
                    <div class="col-md-7">
                        @Html.Label("RemarkCheckIn", "Remark (Barang Bawaan):")
                        @Html.TextArea("RemarkCheckIn", "", 4, 3, new { @class = "k-textbox", style = "width: 100%; padding:10px", required = "required" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-3">
                        <button class="btn btn-info" id="btnRetakePhoto" onclick="OpenModalTakePhoto()"><i class="fa fa-camera"></i> Retake</button>
                    </div>
                    <div class="col-md-3 pull-right">
                        <button class="btn btn-success" id="BtnSignIn" onclick="SetShimanoBadge()"><i class="fa  fa-sign-in"></i> Sign In</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.box-body -->
    </div>
    <div class="col-md-6" id="BoxSignInCard" hidden="hidden">
        <div class="box ShimanoBox">
            <div class="box-header">
                Register Shimano Badge
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label("CardShimano", "TAP Shimano Badge Card : ")
                            @(Html.Kendo()
                                .TextBox()
                                .Name("CardShimano").HtmlAttributes(new { @class = "form-control k-textboxlarge text-center" }))
                            @*@Html.TextBox("searchName", "", new { @class = "form-control ShimanoBlackBox", required = "required" })*@
                        </div>

                    </div>
                </div>
                <br />
            </div>
        </div>
        <!-- /.box-body -->
    </div>
</div>

<div class="row">
    <div class="col-md-6 col-md-offset-3" id="boxDetailVisitorInPlant" hidden="hidden">
        <div class="box ShimanoBox">
            <div class="box-header">
                Detail Visitor
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Hidden("inVisitorId")
                            @Html.Hidden("inLogId")
                            @Html.Label("inFullName", "Name : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("inFullName").HtmlAttributes(new { style = "width:100%", @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("inCompany", "Company : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("inCompany").HtmlAttributes(new { style = "width:100%", @class = "form-control", @readonly = "readonly" }))
                        </div>

                    </div>

                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("inStatus", "Status : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("inStatus").HtmlAttributes(new { style = "width:100%", @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("inHostName", "Host Name : ")<br />
                            @(Html.Kendo()
                .TextBox()
                .Name("inHostName").HtmlAttributes(new { style = "width:100%", @class = "form-control", @readonly = "readonly" }))
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label("inRemark", "Remark : ")<br />
                            @(Html.TextArea("inRemark","",3,3, new { @class = "form-control", @readonly = "readonly" }))
                        </div>
                    </div>
                </div>
                <div class="row" id="rowMenuVisitor">
                    <div class="col-md-4" id="rowVisitorCheckIn" hidden="hidden">
                        <button class="btn btn-success" onclick="VisitorAction(3)"><i class="fa fa-sign-in"></i> Check In</button>
                    </div>
                    <div class="col-md-4" id="rowVisitorBreak" hidden="hidden">
                        <button class="btn btn-warning" onclick="VisitorAction(2)"><i class="fa fa-sign-out"></i> Break</button>
                    </div>
                    <div class="col-md-4 pull-right">
                        <button class="btn btn-danger" onclick="VisitorAction(4)"><i class="fa fa-sign-out"></i> Check Out</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.box-body -->
    </div>
</div>






<!-- ==================MODAL==============================-->
<div class="modal fade" id="modalRegisterCard">
    <div class="modal-dialog  modal-lg ">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" style="color:white" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" id="title">Register Card Visitor</h3>
            </div>
            <div class="modal-body" id="myModalBodyDiv1">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Hidden("IdRegister")
                            @Html.Label("CardRegister", "TAP NFC Card : ")
                            @(Html.Kendo()
                                .TextBox()
                                .Name("CardRegister").HtmlAttributes(new { @class = "form-control k-textboxlarge text-center" }))
                            @*@Html.TextBox("searchName", "", new { @class = "form-control ShimanoBlackBox", required = "required" })*@
                        </div>

                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Close</a>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="modalHostAppointment">
    <div class="modal-dialog  modal-lg ">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" style="color:white" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" id="titleHostApppointment">Appointment for </h3>
            </div>
            <div class="modal-body" id="myModalBodyDiv1">
                @using (Ajax.BeginForm("SaveAppointment", "Visitor", null,
                                                                                new AjaxOptions
                                                                                {
                                                                                    OnSuccess = "onSuccess",
                                                                                    OnFailure = "onFailure",
                                                                                    OnBegin = "onProgress",
                                                                                }, new { @id = "formSaveAppointment" }))
                {
                    <div class="row">
                        <div class="col-md-4">
                            @Html.HiddenFor(m => m.VisitLog.VisitorId)
                            @Html.LabelFor(m => m.VisitLog.HostId, "Host Name : ")<br />
                            <div class="k-content">
                                @(Html.Kendo().DropDownListFor(m => m.VisitLog.HostId)
                                            .DataTextField("UseNam").DataValueField("UseID")
                                            .HtmlAttributes(new { style = "width:100%", @class= "ShimanoTextBox" })
                                            .Filter("contains")
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetHostDetail", "Visitor");
                                                })
                                                .ServerFiltering(false);
                                            }).OptionLabel("Select Host"))
                            </div>
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(m => m.VisitLog.VisitType, "Visitor Type")
                            <div class="k-content">


                                @Html.Kendo().DropDownListFor(m => m.VisitLog.VisitType).OptionLabel("Select Visit Type...").HtmlAttributes(new { style = "width: 100%", @class = "form-control", required = "required", data_required_msg = "Please Select the Visit Type" }).DataTextField("VisitorType").DataValueField("Id").DataSource(source => { source.Read(read => { read.Action("getVisitTypeList", "MasterData", new { text = "1" }); }); }).Filter("contains").Events(e => e.Change("RefreshArea"))
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(m => m.VisitLog.Remark, "Remark")
                            <div class="k-content">
                                @Html.TextAreaFor(m => m.VisitLog.Remark, 3, 3, new { @class = "k-textbox", style = "width: 100%; padding:10px", required = "required" })
                            </div>
                        </div>
                    </div><br />
                    <div class="row">
                        <div class="col-md-6">
                            <button id="btnSaveAppointment" type="submit" class="btn btn-info"><i class="fa fa-save"></i> Save Appointment</button>
                        </div>
                    </div>
                }

            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Close</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modalTakePhoto">
    <div class="modal-dialog  modal-lg ">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" style="color:white" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" id="titleTakePhoto">Retake Photo for </h3>
            </div>
            <div class="modal-body" id="myModalBodyDiv1">
                <div class="row">
                    <div class="col-md-6 text-center">
                        <div class="form-group">
                            <div id="Camera">
                            </div>
                        </div>
                        <button type="button" class="btn btn-lg btn-info" id="btnCapture" onclick="webcam.capture();"><i class="fa fa-camera-retro"></i> Capture</button>
                    </div>
                    <div class="col-md-6 text-center">
                        <div class="form-group">
                            <img id="imgToSubmit" class="img-responsive" style="height:360px; width:90%;" src="@Url.Content("~/Uploads/PhotoVisitor/no_image.png")" />
                        </div>
                        <button type="button" class="btn btn-lg btn-info" id="btnSubmitPhoto" onclick="savePhoto()"><i class="fa fa-download"></i> Submit</button>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Close</a>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#boxSearchByName').hide()
        $('#boxDetailVisitor').hide()
        $('#boxGridName').hide()
        $('#boxDetailVisitorPhoto').hide()
        $('#txtSearchById').focus();
    })
</script>
<script id="keypressKeyboard">
    $('#txtSearchName').on('keypress', function (e) {
        if (e.which === 13) {
            $(this).attr("disabled", "disabled");
            var Name = $('#txtSearchName').val();
            showGrid(Name);
            $(this).removeAttr("disabled");
        }
    });
    $('#txtSearchById').on('keypress', function (e) {
        if (e.which === 13) {
            var id = $('#txtSearchById').val();
            $(this).attr("disabled", "disabled");
            searchVisitorbyBadge(id);
            $(this).removeAttr("disabled");
        }
    });
    $('#CardRegister').on('keypress', function (e) {
        if (e.which === 13) {
            $(this).attr("disabled", "disabled");
            var id = $('#IdRegister').val();
            var CardId = $('#CardRegister').val();
            saveCardRegister(id, CardId);
            $(this).removeAttr("disabled");
        }
    });
    $('#CardShimano').on('keypress', function (e) {
        if (e.which === 13) {
            saveToCheckIn();
        }
    });
</script>
<script id="Time ">
    function timeStartChange() {
        var startTime = this.value(),
            endPicker = $("#@Html.IdFor(m => m.VisitLog.TimeEnd)").data("kendoTimePicker");

        if (startTime) {
            startTime = new Date(startTime);
            endPicker.max(startTime);
            startTime.setMinutes(startTime.getMinutes() + this.options.interval);
            endPicker.min(startTime);
            endPicker.value(startTime);
        }
    }

</script>
<script>

    function OpenModalVisitor(id) {
        $("#modalRegisterCard").modal("show");
        $("#IdRegister").val(id);
        $("#CardRegister").focus()
    }
    function OpenModalTakePhoto() {
        $('#modalTakePhoto').modal("show");
        $("#Camera").empty()
        $("#imgToSubmit").prop("src", "@Url.Content("~/Uploads/PhotoVisitor/no_image.png")")
        onOffCamera();
    }
    function successSearchByBadge(data) {
        $("#boxDetailVisitorInPlant").show("slow");
        $("#inVisitorId").val(data.visitor.VisitorId)
        $("#inLogId").val(data.visitor.LogId)
        $("#inFullName").val(data.visitor.FullName)
        $("#inCompany").val(data.visitor.Company)
        $("#inStatus").val(data.visitor.Status)
        $("#inHostName").val(data.visitor.HostName)
        $("#inRemark").html(data.visitor.Remark)
        if (data.visitor.Status === "CHECKIN") {
            $("#rowVisitorBreak").show("slow");
        }
        else if (data.visitor.Status === "BREAK") {
            $("#rowVisitorCheckIn").show("slow");
        }
    }
    function successSearchById(data) {
        $('#boxSearchById').hide("slow")
        $('#boxDetailVisitor').show("slow")
        $('#detailId').val(data.visitor.id);
        $('#detailName').val(data.visitor.FullName);
        $('#detailCompany').val(data.visitor.Company);
        $('#detailPhone').val(data.visitor.Phone);
        $('#detailEmail').val(data.visitor.Email);
        $('#detailJobDesc').val(data.visitor.JobDesc);
        CheckPhoto('@Url.Content("~/Uploads/PhotoVisitor/")' + data.visitor.Photo)
        $('#BtnSignIn').prop('disabled', false);


        if (data.host != null) {
            $('#boxDetailHost').show("slow")
            if (data.host.Status === "APPROVED" || data.host.Status === "CHECKOUT") {
                $('#boxDetailVisitorPhoto').show("slow")
            }
            $('#HostLogId').val(data.host.LogId)
            $('#HostId').val(data.host.UseID)
            $('#HostDepartment').val(data.host.UseDep)
            $('#HostName').val(data.host.UseNam)
            $('#HostTel').val(data.host.UseTel)
            $('#AppointmentStart').val(data.host.TimeStart)
            $('#AppointmentEnd').val(data.host.TimeEnd)
            $('#VisitorType').val(data.host.VisitorType)
            $('#ApprovalHost').val(data.host.Status)
            $('#Remark').val(data.host.Remark)
            $("#RemarkCheckIn").focus()
            if (data.host.NeedApprove.toUpperCase() == "FALSE") {
                $("#VisitorType").css("background-color", "#00a65a");
                $("#VisitorType").css("color", "white");
            }
            else {
                $("#VisitorType").css("background-color", "#d73925");
                $("#VisitorType").css("color", "white");
            }
        }
        else {
            toastr.warning("Data Host Not Found", "Warning!");
            $('#rowCreateAppointment').show("slow");
        }
    }
    function failSearchById (){
        $('#boxSearchByName').show("slow")
        $('#boxSearchById').hide("slow")
        $('#txtSearchName').focus()
    }
    function SuccessRegisterCard() {
        searchById($("#CardRegister").val())
        $("#modalRegisterCard").modal("hide");
        $('#boxSearchByName').hide("slow")
        $('#boxGridName').hide("slow")
    }
    function CreateAppointment() {
        $('#modalHostAppointment').modal('show');
        $('#@Html.IdFor(m=> m.VisitLog.VisitorId)').val($('#detailId').val())
        $('#titleHostApppointment').text("Appointment For " + $("#detailName").val())
    }
    function successSaveFunction() {
        $('#modalTakePhoto').modal("hide");
        $('#BtnSignIn').prop('disabled', false);
        $('#detailPhoto').prop("src", '@Url.Content("~/Uploads/PhotoVisitor/")' + $("#photoSource").val())
    }
    function checkSrcPhoto(src) {
        return $("<img>").attr('src', src);
    }
    function SetShimanoBadge() {
        $('#BoxSignInCard').show('slow')
        $('#CardShimano').focus()
    }
    function CheckPhoto(src) {
        var srcDef = '@Url.Content("~/Uploads/PhotoVisitor/no_image.png")';
        checkSrcPhoto(src)
          .on("error", function (e) {
              $('#detailPhoto').attr('src', srcDef)
              $('#BtnSignIn').prop("disabled", true);
          })
          .on("load", function (e) {
              $('#detailPhoto').attr('src', src)
          })
    }
    function RefreshArea() {
        $("#@Html.IdFor(m => m.VisitLog.Area)").data("kendoDropDownList").dataSource.read();
    }
</script>
<script id="functionAjax">
    function onOffCamera() {
        document.getElementById('btnSubmitPhoto').disabled = true;
        $("#Camera").webcam({
            width: '100%',
            height: 360,
            mode: "save",
            swffile: "@Url.Content("~/Scripts/jscam.swf")",
            onTick: function () { },
            onSave: function () {
                 UploadPic();
                },
        onCapture: function () {
            webcam.save("@Url.Content("~/Visitor/Capture")/" + $("#detailId").val());
        },
        debug: function () { },
        onLoad: function () { }

    });
    }
    function UploadPic() {
        $.ajax({
            type: 'POST',
            url: ("@Url.Content("~/Visitor/Rebind")/"),
            dataType: 'json',
            success: function (data) {
            $("#imgToSubmit").attr("src", '@Url.Content("~/Uploads/PhotoVisitor/")' + data);
            $("#photoSource").val(data);
            document.getElementById('btnSubmitPhoto').disabled = false;
            toastr.success("Photo Capture successfully!", "Success");
        }
    });
    }
    function searchVisitorbyBadge(CardId) {
        $.ajax({
            url: '@Url.Action("SearchByBadge", "Visitor")',
            cache: false,
            type: "POST",
            data: { CardId: CardId },
            success: function (data) {
                if (data.visitor != null) {
                    toastr.success("ID Found! <br/> Name who has this card is : " + data.visitor.FullName, "Success!");
                    $("#CardScanned").val(CardId)
                    successSearchByBadge(data);
                }
                else {
                    searchById(CardId)
                }

            },
            error: function (data) {
                failSearchById();
            }
        });
    }
    function VisitorAction(id) {
        var visitorId = $("#inVisitorId").val();
        var logId = $("#inLogId").val();
        var CardId = $("#CardScanned").val();

        $.ajax({
            url: '@Url.Action("VisitorActionChgStatus", "Visitor")',
            cache: false,
            type:"POST",
            data: { Id: visitorId, LogId: logId, CardId: CardId, method: id},
            success: function (data) {
                location.reload();
                toastr.sucess(data.Message, "success")
            },
            error: function (data) {
                toastr.warning("ID Not Found! Please Register this ID Card", "Warning!");
            }
        });
    }
    function searchById(CardId) {
        $.ajax({
            url: '@Url.Action("SearchById", "Visitor")',
            cache: false,
            type: "POST",
            data: { CardId: CardId },
            success: function (data) {
                if (data.visitor != null) {
                    toastr.success("ID Found! Name who has this card is : " + data.visitor.FullName, "Success!");
                    $("#CardScanned").val(CardId)
                    successSearchById(data);

                }
                else {
                    toastr.warning("ID Not Found! Please Register this ID Card", "Warning!");
                    failSearchById();
                }

            },
            error: function (data) {
                toastr.warning("ID Not Found! Please Register this ID Card", "Warning!");
                failSearchById();
            }

        });
    }
    function saveCardRegister(id, CardId) {
        $.ajax({
            url: '@Url.Action("saveCardRegister", "Visitor")',
            cache: false,
            type: "POST",
            data: { id: id, CardId: CardId },
            success: function (data) {
                if (data.Success === true) {
                    toastr.success(data.Message, "Success!");
                    SuccessRegisterCard();
                    $("#CardScanned").val(CardId)
                }
                else {
                    toastr.warning(data.message, "Warning!");
                }
            },
            error: function () {
                toastr.error("Something wrong with this, please call IT!", "ERROR!");
            }

        });
    }
    function savePhoto() {
        var id = $("#detailId").val();
        var src = $("#photoSource").val()
        $.ajax({
            url: '@Url.Action("SavePhotoVisitor", "Visitor")',
            cache: false,
            type: "POST",
            data: { id: id, src: src },
            success: function (data) {
                if (data.Success === true) {
                    successSaveFunction();
                    toastr.sucess(data.message, "success")
                }
                else {
                    toastr.error("Something wrong with this, please call IT!", "ERROR!");
                }
            }

        });
    }
    function saveToCheckIn() {
        var Id = $("#detailId").val();
        var LogId = $("#HostLogId").val()
        var CardId = $("#CardShimano").val()
        var remark = $("#RemarkCheckIn").val()
        $.ajax({
            url: '@Url.Action("SaveToCheckin", "Visitor")',
            cache: false,
            type: "POST",
            data: { Id: Id, LogId: LogId, CardId: CardId, Remark:remark },
            success: function (data) {
                if (data.Success === true) {
                    location.reload();
                    toastr.sucess(data.message, "success")
                }
                else {
                    toastr.error("Something wrong with this, please call IT!", "ERROR!");
                }
            }

        });
    }
</script>
<script id="mousetrap">
    Mousetrap.bind('ctrl+f', function (e) {
        e.preventDefault();
        $("#txtSearchById").focus();
    });
    Mousetrap.bind('ctrl+s', function (e) {
        e.preventDefault();
        $("#modalSearch").modal("hide");
        $('#boxDetailVisitor').show("slow")
        toastr.info("SUCCESS", "Success");
    });
    //Mousetrap.bind('ctrl+c', function (e) {
    //    e.preventDefault();
    //    alert("Copy")
    //});
</script>
<script>
    function onSuccess(data) {
        if (data.Success) {
            $("#loaderDiv").hide();
            $("#modalHostAppointment").modal("hide");
            $('#formSaveAppointment').trigger("reset");
            $('#boxDetailHost').show('slow');
            $('#boxDetailVisitorPhoto').show('slow');
            toastr.success(data.message, 'Success!');
            searchById($('#CardScanned').val())
        } else {
            toastr.warning(data.message, 'Warning!')
        }
        $('#btnSaveAppointment').prop('disabled', false);

    }
    function onFailure(data) {
        toastr.warning(data, 'Warning!')
        $('#btnSaveAppointment').prop('disabled', false);
    }
    function onProgress() {
        $('#btnSaveAppointment').prop('disabled', true);
    }
</script>

@if (TempData["isSuccess"] != null)
{
    <script>
    toastr.success('@TempData["isSuccess"].ToString()', "SUCCESS!");
    </script>

}