@model VMS.Web.Models.RegisterWifi
@{
    ViewBag.Title = "WifiAccount";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@Styles.Render("~/DataTablesCS")
@Scripts.Render("~/DataTablesJS")
<script>
    $(document).ready(function () {
        GenerateListRegister();
    })
    function GenerateListRegister() {
        var dateFrom = $("#DateFromHis").val();
        var dateTo = $("#DateToHis").val();
        var Name = $("#Name").val();
        var tableListRegister = $("#tableListRegister").DataTable({
            destroy: true,

            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 5,
            "scrollX" : true,
            "ajax": {
                "url": "@Url.Action("GetListRegister", "ToolBox")",
            "type": "POST",
            "datatype": "json",
            "data": function (d) {
                return $.extend({}, d, {
                    "DateFrom": dateFrom,
                    "DateTo": dateTo,
                    "Name" : Name
                });
            }
        },

            "columnDefs":
            [{
                "targets": [0],
                "visible": false,
                "searchable": false
            },
            {
                "targets": [5],
                "searchable": false,
                "orderable": false
            }],
            "columns": [
            {
                "data": "No",
                render: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            { "data": "HostName", "name": "HostName", "title": "Host Name", "autoWidth": true },
            { "data": "FullName", "name": "FullName", "title": "Visitor Name", "autoWidth": true },
            { "data": "Username", "name": "Username", "title": "Username Wifi", "autoWidth": true },
            { "data": "Password", "name": "Password", "title": "Password Wifi", "autoWidth": true },
            { "data": "CreDate", "name": "CreDate", "title": "Create Date", "autoWidth": true },
            { "data": "sTimeExpired", "name": "sTimeExpired", "title": "Time Expired", "autoWidth": true },
            { "data": "CreName", "name": "CreName", "title": "Create Name", "autoWidth": true },
            {
                "render": function (data, type, full, meta) {
                    var buttonResend = '<button class="btn btn-info" disabled="disabled"  onclick="ChangeVisitorType(' + "'" + full.Id + "'" + ')"><i class="fa fa-1x fa-edit"></i> Resend Wifi Account</button>'
                    return buttonResend;
                }
            },
                    

    ]
    }
        );
    }
</script>

<div class="row">
    <div class="col-md-12" id="BoxAppointHistory">
        <div class="box ShimanoBox ">
            <div class="box-header">
                History
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body ">
                <div class="row">
                    <div class="col-md-3">
                        <button class="btn btn-success btn-lg btn-block" id="btnAddVisitor" onclick="registerVisitor()"><i class="fa fa-user"></i> Register New Wifi Account</button>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-4">
                        <div class="k-content">
                            @Html.Label("DateFromHis", "Date Start")
                            @(Html.Kendo().DatePicker().Name("DateFromHis")
                              .Start(CalendarView.Month)
                              .Depth(CalendarView.Month)
                              .Max(DateTime.Today).Events(e => e.Change("startChangeHis"))
                              .Format("yyyy-MM-dd")
                              .Value(DateTime.Today.AddMonths(-1))
                              .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                            )
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="k-content">
                            @Html.Label("DateToHis", "Date To")
                            @(Html.Kendo().DatePicker().Name("DateToHis")
                                .Start(CalendarView.Month)
                                .Depth(CalendarView.Month)
                                .Min(DateTime.Today.AddYears(-1))
                                .Max(DateTime.Today).Events(e => e.Change("GenerateListRegister"))
                                .Format("yyyy-MM-dd")
                                .Value(DateTime.Today)
                                .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                            )
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Name", "Visitor Name")
                        @Html.Kendo().TextBox().Name("Name").HtmlAttributes(new { @class = "form-control ShimanoTextBox", style = "width:100%", @onchange = "GenerateListRegister()" })
                    </div>
                </div><br />
                <div class="row">
                    <div class="col-md-12">
                        <div style="width:100%; margin:0 auto;">
                            <table id="tableListRegister" class="table table-striped table-bordered dt-responsive nowrap " width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>HostName</th>
                                        <th>FullName</th>
                                        <th>Username</th>
                                        <th>Password</th>
                                        <th>CreDate</th>
                                        <th>TimeExpired</th>
                                        <th>CreName</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->

        </div>
    </div>
</div>
<div class="modal fade" id="modalRegisterVisitor">
    <div class="modal-dialog">
        <div class="modal-content ShimanoBox">
            @using (Ajax.BeginForm("PostRegisterWifi", "ToolBox", null,
                                                    new AjaxOptions
                                                    {
                                                        OnSuccess = "onSuccess",
                                                        OnFailure = "onFailure",
                                                    }, new { @id = "formRegisterVisitor" }))
            {
                <div class="modal-header">
                    <a href="#" style="color:white" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title" id="title">Register Visitor Wifi</h3>
                </div>

                <div class="modal-body">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.LabelFor(m => m.HostId, "Host Name : ")
                                @(Html.Kendo().DropDownListFor(m => m.HostId)
                                            .DataTextField("UseNam").DataValueField("UseID")
                                            .HtmlAttributes(new { style = "width:100%", @class = "ShimanoTextBox" })
                                            .Filter("contains").Events(e=>e.Change("RefresVisitorId"))
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetHostForWifi", "ToolBox");
                                                })
                                                .ServerFiltering(false);
                                            }).OptionLabel("Select Host"))
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.LabelFor(m => m.VisitorId, "Visitor Name : ")
                                @(Html.Kendo().DropDownListFor(m => m.VisitorId)
                                            .DataTextField("FullName").DataValueField("id")
                                            .HtmlAttributes(new { style = "width:100%", @class = "ShimanoTextBox" })
                                            .Filter("contains")
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetVisitorForWifi", "ToolBox").Data("GetHostId");
                                                })
                                                .ServerFiltering(false);
                                            }).OptionLabel("Select Visitor"))
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="k-content">
                                @Html.LabelFor(m => m.TimeExpired, "Time Expired")
                                @(Html.Kendo().TimePickerFor(m => m.TimeExpired).Format("HH:mm")
.Min("12:00")
.Max("20:00")
.Value("12:00")
.HtmlAttributes(new { style = "width: 100%" })
                                )
                            </div>
                        </div>
                    </div>
                    <br />

                </div>
                <div class="modal-footer">
                    <div class="col-md-6">
                        <button class="btn btn-success btn-block" type="submit" id="btnSaveRegister"><i class="fa fa-save"></i> Save</button>

                    </div>
                    <div class="col-md-6">
                        <a href="#" class="btn btn-danger btn-block" data-dismiss="modal"><i class="fa fa-times"></i> Close</a>
                    </div>
                    <div class="load-wrapp" id="loadingSubmit" hidden="hidden">
                        <div class="load-3">
                            <div class="line"></div>
                            <div class="line"></div>
                            <div class="line"></div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<script>
    function GetHostId() {
        return {
            HostId: $("#@Html.IdFor(m=>m.HostId)").val()
        }

    }
    function RefresVisitorId() {
        $("#VisitorId").data("kendoDropDownList").dataSource.read();
    }

    function startChangeHis() {
        var endPicker = $("#DateToHis").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate());
            endPicker.min(startDate);
        }
        GenerateListRegister();
    }
    function registerVisitor() {
        $("#modalRegisterVisitor").modal("show");
    }
    function onSuccess(data) {
        if (data.Success) {
            $("#VisitorId").data("kendoDropDownList").select(-1)
            $("#HostId").data("kendoDropDownList").select(-1)

            $("#loaderDiv").hide();
            $("#modalRegisterVisitor").modal("hide");
            GenerateListRegister();
            toastr.success(data.Message, 'Success!');
        } else {
            toastr.warning(data.Message, 'Warning!')
        }
        $('#btnSaveRegister').prop('disabled', false);

    }
    function onFailure(data) {
        toastr.warning(data, 'Warning!')
        $('#btnSaveRegister').prop('disabled', false);
    }
    function onProgress() {
        $('#btnSaveRegister').prop('disabled', true);
    }
</script>

