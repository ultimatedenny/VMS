
@{
    ViewBag.Title = "Report";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@Styles.Render("~/DataTablesCS")
@Scripts.Render("~/DataTablesJS")
<script>
    function GenerateHisGrid() {
        var dateFrom = $("#DateFromHis").val();
        var dateTo = $("#DateToHis").val();
        var tableHistoryGrid = $("#HistoryVisitorGrid").DataTable({
            destroy: true,

            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 5,
            "scrollX" : true,
            "ajax": {
                "url": "@Url.Action("getListVisitLogHistory", "Report")",
                "type": "POST",
                "datatype": "json",
                "data": function (d) {
                    return $.extend({}, d, {
                        "dateFrom": dateFrom,
                        "dateTo": dateTo
                    });
                }
            },

            "columnDefs":
            [{
                "targets": [0],
                "visible": false,
                "searchable": false
             },
            {
                "targets": [5],
                "searchable": false,
                "orderable": false
            }],
            //"rowCallback": function (row, data, index) {
            //    $(row).find('td:eq(8)').css('font-weight', 'bold');
            //    if (data["NeedApprove"].toUpperCase() == "FALSE") {
            //        $(row).find('td:eq(5)').css('background-color', '#00a65a');
            //        $(row).find('td:eq(5)').css('color', 'white');
            //    }
            //    else {
            //        $(row).find('td:eq(5)').css('background-color', '#d73925');
            //        $(row).find('td:eq(5)').css('color', 'white');

            //    }
            //},
            "columns": [
                    {
                        "data": "No",
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "FullName", "name": "FullName", "title": "Full Name", "autoWidth": true },
                    { "data": "Company", "name": "Company", "title": "Company", "autoWidth": true },
                    { "data": "VisitorType", "name": "VisitorType", "title": "Visitor Type", "autoWidth": true },
                    { "data": "Plant", "name": "Plant", "title": "Plant", "autoWidth": true },
                    { "data": "Area", "name": "Area", "title": "Area", "autoWidth": true },
                    { "data": "Remark", "name": "Remark", "title": "Remark", "autoWidth": true },
                    { "data": "DateStart", "name": "DateStart", "title": "Date Start", "autoWidth": true },
                    { "data": "DateEnd", "name": "DateEnd", "title": "Date End", "autoWidth": true },
                    { "data": "TimeStart", "name": "TimeStart", "title": "Time Start", "autoWidth": true },
                    { "data": "TimeEnd", "name": "TimeEnd", "title": "Time End", "autoWidth": true },
                    

            ]
        }
        );
    }
    function GeneratePreHisGrid() {
        var tableHistoryGrid = $("#PendingVisitorGrid").DataTable({
            destroy: true,

            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 5,
            "scrollX" : true,
            "ajax": {
                "url": "@Url.Action("getPendingVisitor", "Report")",
            "type": "POST",
            "datatype": "json",
        },

            "columnDefs":
            [{
                "targets": [0],
        "visible": false,
        "searchable": false
    },
    {
                "targets": [5],
                "searchable": false,
                "orderable": false
    }],

    "columns": [
    {
        "data": "No",
        render: function (data, type, row, meta) {
            return meta.row + meta.settings._iDisplayStart + 1;
        }
    },
    { "data": "FullName", "name": "FullName", "title": "Full Name", "autoWidth": true },
    { "data": "Company", "name": "Company", "title": "Company", "autoWidth": true },
    { "data": "VisitorType", "name": "VisitorType", "title": "Visitor Type", "autoWidth": true },
    { "data": "Plant", "name": "Plant", "title": "Plant", "autoWidth": true },
    { "data": "Area", "name": "Area", "title": "Area", "autoWidth": true },
    { "data": "Remark", "name": "Remark", "title": "Remark", "autoWidth": true },
    { "data": "HostName", "name": "HostName", "title": "HostName", "autoWidth": true },
    { "data": "Status", "name": "Status", "title": "Status", "autoWidth": true },
    { "data": "DateStart", "name": "DateStart", "title": "Date Start", "autoWidth": true },
    { "data": "DateEnd", "name": "DateEnd", "title": "Date End", "autoWidth": true },
    {
        "render": function (data, type, full, meta) {
            var button_1 = '<button class="btn btn-info" disabled="disabled"  onclick="ChangeVisitorType(' + "'" + full.LogId + "'" + ', ' + full.VisitorId + ', ' + "'Change'" + ')"><i class="fa fa-1x fa-edit"></i> Request Changing VisitorType</button>';
            var button_2 = '<button class="btn btn-danger btn-block"  onclick="ChangeVisitorType(' + "'" + full.LogId + "'" + ', ' + full.VisitorId + ",'Cancel'" + ')"><i class="fa fa-1x fa-trash"></i> Cancel</button>';
            if (full.NeedApprove.toUpperCase() == "FALSE" && full.Status.toUpperCase() != "CANCELLED") {
                button_1 = '<button class="btn btn-info" onclick="ChangeVisitorType(' + "'" + full.LogId + "'" + ', ' + full.VisitorId + ', ' + "'Change'" + ')"><i class="fa fa-1x fa-edit"></i> Request Changing VisitorType</button>'
            }
            if (full.Status.toUpperCase() == "CANCELLED" || full.Status.toUpperCase() =="CHECKIN" || full.Status.toUpperCase() =="CHECKOUT" || full.Status.toUpperCase() =="BREAK") {
                button_2 = '<button class="btn btn-danger btn-block" disabled="disabled" onclick="ChangeVisitorType(' + "'" + full.LogId + "'" + ', ' + full.VisitorId + ",'Cancel'" + ')"><i class="fa fa-1x fa-times"></i> Cancelled</button>';
            }
            return  button_2;
        }
    },
    ]
    }
        );
    }
    $(document).ready(function () {
        GenerateHisGrid();
        GeneratePreHisGrid();
    })
</script>
<script>
    function GenerateChangeReq() {
        var LogId = $("#LogId").val();
        var VisitorId = $("#VisitorId").val();
        var IsAllVendor = $("#IsAllVendor").val();
        var changeReqGrid = $("#ChangeStatusGrid").DataTable({
            destroy: true,

            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 5,
            "ajax": {
                "url": "@Url.Action("GetChangeReqVisit", "Report")",
            "type": "POST",
            "datatype": "json",
            "data": function (d) {
                return $.extend({}, d, {
                    "LogId": LogId,
                    "VisitorId": VisitorId,
                    "IsAllVendor": IsAllVendor,
                });
            }
        },

            "columnDefs":
            [{
                "targets": [0],
        "visible": true,
        "searchable": false
    }],
    //"rowCallback": function (row, data, index) {
    //    $(row).find('td:eq(8)').css('font-weight', 'bold');
    //    if (data["NeedApprove"].toUpperCase() == "FALSE") {
    //        $(row).find('td:eq(5)').css('background-color', '#00a65a');
    //        $(row).find('td:eq(5)').css('color', 'white');
    //    }
    //    else {
    //        $(row).find('td:eq(5)').css('background-color', '#d73925');
    //        $(row).find('td:eq(5)').css('color', 'white');

    //    }
    //},
    "columns": [
            {
                "data": "No",
                render: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            { "data": "FullName", "name": "FullName", "title": "Full Name", "autoWidth": true },
            { "data": "Company", "name": "Company", "title": "Company", "autoWidth": true },
            { "data": "JobDesc", "name": "JobDesc", "title": "Job Title", "autoWidth": true },
                    

    ]
    }
        );
    }
</script>
<div class="row">
    <div class="col-md-12" id="BoxAppointPending">
        <div class="box ShimanoBox">
            <div class="box-header">
                Running and Pending Visitor 
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div style="width:100%; margin:0 auto;">
                            <table id="PendingVisitorGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>Full Name</th>
                                        <th>Company</th>
                                        <th>Visit Type</th>
                                        <th>Plant</th>
                                        <th>Area</th>
                                        <th>Remark</th>
                                        <th>HostName</th>
                                        <th>Status</th>
                                        <th>DateStart</th>
                                        <th>DateEnd</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12" id="BoxAppointHistory">
        <div class="box ShimanoBox ">
            <div class="box-header">
                History
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body ">
                <div class="row">
                    <div class="col-md-4">
                        <div class="k-content">
                            @Html.Label("DateFromHis", "Date Start")
                            @(Html.Kendo().DatePicker().Name("DateFromHis")
                              .Start(CalendarView.Month)
                              .Depth(CalendarView.Month)
                              .Max(DateTime.Today).Events(e => e.Change("startChangeHis"))
                              .Format("yyyy-MM-dd")
                              .Value(DateTime.Today.AddMonths(-1))
                              .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                            )
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="k-content">
                            @Html.Label("DateToHis", "Date To")
                            @(Html.Kendo().DatePicker().Name("DateToHis")
                                .Start(CalendarView.Month)
                                .Depth(CalendarView.Month)
                                .Min(DateTime.Today.AddYears(-1))
                                .Max(DateTime.Today).Events(e => e.Change("GenerateHisGrid"))
                                .Format("yyyy-MM-dd")
                                .Value(DateTime.Today)
                                .HtmlAttributes(new { style = "width: 100%", title = "datepicker", @class = "form-control" })
                            )
                        </div>
                    </div>
                </div><br />
                <div class="row">
                    <div class="col-md-12">
                        <div style="width:100%; margin:0 auto;">
                            <table id="HistoryVisitorGrid" class="table table-striped table-bordered dt-responsive nowrap " width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>Full Name</th>
                                        <th>Company</th>
                                        <th>Visit Type</th>
                                        <th>Plant</th>
                                        <th>Area</th>
                                        <th>Remark</th>
                                        <th>DateStart</th>
                                        <th>DateEnd</th>
                                        <th>TimeStart</th>
                                        <th>TimeEnd</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->

        </div>
    </div>
</div>


<div class="modal fade" id="modalToChange">
    <div class="modal-dialog  modal-lg ">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" style="color:white" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" id="titleModal">Register Card Visitor</h3>
            </div>
            <div class="modal-body" id="myModalBodyDiv1">
                <div class="row">
                    <div class="col-md-4">
                        <div class="k-content">
                            @Html.Hidden("LogId")
                            @Html.Hidden("VisitorId")
                            @Html.Hidden("Method")
                            @Html.Label("IsAllVendor", "Method Option : ")<br />
                            @(Html.Kendo().ComboBox().Name("IsAllVendor")
                                                                      .Filter("contains")
                                                                      .Placeholder("Select Method Option...")
                                                                      .DataTextField("Text")
                                                                      .DataValueField("Value")
                                                                      .BindTo(new List<SelectListItem>() {
                                                                                                  new SelectListItem() {
                                                                                                    Text = "Select Only This Visitor", Value = "0"
                                                                                                  },
                                                                                                  new SelectListItem() {
                                                                                                   Text = "Select All from this Group", Value = "1"
                                                                                                  }
                                                                      })
                                                                      .SelectedIndex(0).Events(e=>e.Change("GenerateChangeReq"))
                                                                      .Suggest(true)
                                                                      .HtmlAttributes(new { style = "width:100%;" })
                            )
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <div style="width:100%; margin:0 auto;">
                            <table id="ChangeStatusGrid" class="table table-striped table-bordered dt-responsive nowrap " width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>Full Name</th>
                                        <th>Company</th>
                                        <th>Job Title</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" id="btnSaveRequest" onclick="SaveChangeRequest()"><i class="fa fa-save"></i> Save</button>
                <a href="#" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Close</a>
            </div>
        </div>
    </div>
</div>


<script>
    function SaveChangeRequest() {
        var LogId = $("#LogId").val()
        var VisitorId = $("#VisitorId").val()
        var Method = $("#Method").val()
        var IsAllVendor = $("#IsAllVendor").val()
        $.ajax({
            url: '@Url.Action("PostChangeReqVisit", "Report")',
            cache: false,
            type: "POST",
            data: {
                LogId: LogId,
                VisitorId: VisitorId,
                Method: Method,
                isAllVendor: IsAllVendor
            },
            success: function (data) {
                if (data.Success) {
                    toastr.success("Successfully Change The Status or Visitor Type");
                    $("#modalToChange").modal('hide')
                    GeneratePreHisGrid();
                }
            },
            error: function (data) {
                toastr.error("Please Call IT");
            }
        });
    }
    function ChangeVisitorType(LogId,VisitorId,Method) {
        $("#LogId").val(LogId)
        $("#VisitorId").val(VisitorId)
        $("#Method").val(Method)
        $("#titleModal").text(Method + " the Appointment")
        $("#modalToChange").modal('show')
        GenerateChangeReq();
    }

    function startChangePreHis() {
        var endPicker = $("#DateToPreHis").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate());
            endPicker.min(startDate);
        }
        GeneratePreHisGrid();
    }
    function startChangeHis() {
        var endPicker = $("#DateToHis").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate());
            endPicker.min(startDate);
        }
        GenerateHisGrid();
    }
</script>
